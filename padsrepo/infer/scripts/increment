#!/usr/bin/env perl
my $args = join (" ", @ARGV);
sub cleanupStr
{
    my( $txt ) = @_;
    chomp($txt);
    $txt =~ s/\s//g;
    return $txt;
}

my $pads_home = $ENV{"PADS_HOME"};
if (length($pads_home) == 0) {
  print "\n** Please set the PADS_HOME environment variable to the root of the PADS distribution.\n";
  exit -1;
}

my $learn_home = $ENV{"LEARN_HOME"};
if (length($learn_home) == 0) {
  print "\n** Please set the LEARN_HOME environment variable to the root of the PADS inference system.\n";
  exit -1;
}

my $sml;
my $sml_from = "environment variable SML";
chomp($sml = $ENV{'SML'});
if (length($sml) == 0) {
  chomp($sml = `type sml 2>/dev/null`);
  $sml =~ s/sml is[ ]?//;
  $sml = "" if ($sml =~ /not/);
  $sml_from = "your path";
}
$sml =~ s/^\s+//;  # remove leading spaces
if (length($sml) == 0) {
  print "\n** No environment variable SML, and no sml in your path.\n";
  exit -1;
}

my $arch_n_opsys = `$pads_home/scripts/arch-n-opsys` || "";
$arch_n_opsys = &cleanupStr($arch_n_opsys);

my $cmd = "$sml \@SMLload=$learn_home/lib/increment.$arch_n_opsys $args";
exec $cmd;
