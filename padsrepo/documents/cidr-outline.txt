
CIDR Paper Overview

PADS supports efficient, (provably!) safe parsing and semantic
checking of semi-structured data in ad hoc formats.  Galax is an
implementation of XQuery that supports declarative querying of
semi-structured data in XML.  PADX, the marriage of these two systems,
supports declarative querying using XQuery of virtual XML views of
PADS data.  This combination is very powerful, because it permits data
analysts to implement common data processing tasks in a declarative,
standard query language while not requiring them to explicitly convert
the underlying data into XML.

PADX implements Galax's abstract tree data model, which permits random
access to nodes and data in XML documents.  Large PADS data sources,
however, are most efficiently accessed sequentially, because they are
stored in files and can be very large.  To support querying of large
PADS data sources, the PADX data model can parse PADS data sources
lazily, on demand, during query evaluation.  The PADX record manager
is reminescent of memory managers in object-oriented databases and
guarantees efficient sequential access to PADS data sources while
permitting random access when necessary <Mary>That sentence is awful<Mary>

We describe the PADX architecture and demonstrate the
efficiency of the PADX record manager.

* Mapping of PADL to XML Schema 

* Example queries over PADX sources

* Galax algebra and query optimizer
  - What are the plans for common queries?
  - Queries that can be evaluated using sequential access to document
  - Queries that require multiple scans 

* Experimental evaluation 
  - Compare PADX bulk loading vs. smart loading over query workload 
