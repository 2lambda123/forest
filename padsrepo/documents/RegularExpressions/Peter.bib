@inproceedings{TypingHaskellInHaskell,
  author     = {Jones, Mark P.},
  title      = {Typing Haskell in Haskell},
  booktitle  = {Proceedings of the 9th European Symposium on Programming},
  conference = {ESOP 2000},
  year       = {2000},
  publisher  = {Springer-Verlag},
  series     = {LNCS},
  volume     = {1782}
}

@manual{Haskell98Report,
  title  = {Haskell98 Language and Libraries, Revised Report},
  url    = {http://www.haskell.org/onlinereport},
  month  = {December},
  year   = {2002},
  editor = {Simon Peyton Jones},
  author = {Simon Peyton Jones}
}

@book{InfinityAndTheMind,
 author     = {Rudy Rucker},
 title      = {Infinity and the Mind},
 publisher  = {Bantam Books},
 isbn       = {0-553-23433-1},
 year       = 1982
}

@book{be:toposes,
 author = {J.L. Bell},
 title  = {Toposes and Local Set Theories},
 isbn   = {ISBN 0-19-853274-1},
 callno = {QA169.B45},
 publisher = {Oxford University Press},
 year      = {1988}
}

@book{go:topoi,
 author     = {R. Goldblatt},
 title      = {TOPOI, The Categorial Analysis of Logic},
 volume     = {97},
 series     = {Studies in Logic and the Foundations of Mathematics},
 callno     = {QA 169.G64},
 isbn       = {ISBN 0-444-85207-7},
 publisher  = {North Holland Publishing Company},
 year       = {1979}
}

@book{Categories,
 author     = {T.S. Blyth},
 year       = {1986},
 callno     = {QA169},
 isbn       = {ISBN 0-582-98804-7},
 publisher  = {Longman Group Limited}
}

@book{IsabelleTutorial,
  author     = {Tobias Nipkow and Lawrence C. Paulson and Markus Wenzel},
  title      = {Isabelle / HOL, A Proof Assistant for Higher-Order Logic},
  publisher  = {Springer},
  year       = {2002},
  series     = {LNCS},
  volume     = {2283}
}

@manual{IsabelleReference,
  author     = {Lawrence C. Paulson},
  title      = {The Isabelle Reference Manual},
  month      = {April},
  year       = {2004},
  url        = {http://www.cl.cam.ac.uk/Research/HVG/Isabelle/docs.html}
}

@book{DomainsAndLambdaCalculi,
  title     = {Domains and Lambda Calculi},
  author    = {Roberto M. Amadio and Pierre-Louis Curien},
  publisher = {Cambridge University Press},
  year      = {1998},
  series    = {Cambridge Tracts in Theoretical Computer Science},
  volume    = {46}
}

@book{TopologyViaLogic,
  title     = {Topology via Logic},
  author    = {Steven Vickers},
  publisher = {Cambridge University Press},
  year      = {1989},
  series    = {Cambridge Tracts in Theoretical Computer Science},
  volume    = {5}
}

@book{SheavesInGeometryAndLogic,
  title     = {Sheaves in Geormetry and Logic},
  author    = {Saunders MacLane and Ieke Moerdijk},
  publisher = {Springer-Verlag},
  year      = {1992}
}

@book{CategoriesForTheWorkingMathematician,
  title     = {Categories for the Working Mathematician},
  author    = {Saunders MacLand},
  publisher = {Springer-Verlag},
  year      = {1971},
  series    = {Graduate Texts in Mathematics},
  volume    = {5},
  school    = {University of Chicago}
}

@book{IntroductionToMathematicalLogic,
  title     = {Introduction To Mathematical Logic},
  author    = {Elliott Mendelson},
  publisher = {D. Van Nostrand},
  series    = {The University Series in Undergraduate Mathematics},
  year      = 1964
}

@book{NonStandardAnalysis,
  title     = {Non-standard Analysis},
  author    = {Abraham Robinson},
  publisher = {Princeton University Press},
  year      = {1996},
  series    = {Princeton Landmarks in Mathematics}
}

@book{ElementsOfFunctionalProgramming,
  title     = {Elements Of Functional Programming},
  author    = {Chris Reade},
  publisher = {Addison Wesley},
  year      = {1989},
  series    = {International Computer Science Series}
}

@book{MathematicalPhysics,
  title     = {Mathematical Physics},
  author    = {Robert Geroch},
  publisher = {The University of Chicago Press},
  year      = {1985}
}

@book{SymbolicDynamicsAndCoding,
  title     = {An Introduction to Symbolic Dynamics and Coding},
  author    = {Douglas Lind and Brian Marcus},
  publisher = {Cambridge University Press},
  year      = {1995}
}

@article{ StaticSemanticsForHaskell,
    author  = {Karl-Filip Faxen},
    title   = {A Static Semantics for Haskell},
    journal = {{J}ournal of {F}unctional {P}rogramming},
    volume  = {1},
    number  = {1},
    year    = {1998}
   }

@book{BarrWells,
  author =       "Michael Barr and Charles Wells",
  title =        "{C}ategory {T}heory for {C}omputing {S}cience",
  publisher =    "Prentice Hall",
  year =         "1990",
}

@Book{BirdWadler88,
  author =       "Richard Bird and Phillip Wadler",
  title =        "Introduction to {F}unctional {P}rogramming.",
  publisher =    "Prentice Hall",
  year =         "1988",
}

@article{ koenclaessen,
    author  = {Koen Claessen},
    title   = {A Poor Man's Concurrency Monad},
    journal = {{J}ournal of {F}unctional {P}rogramming},
    volume  = {9},
    number  = {3},
    pages   = {313-323},
    year    = {1999}
   }

@PhdThesis{Cupitt92,
  author =       {John Cupitt},
  school =       {Computing Laboratory, University of Kent at Canterbury},
  title  =       {The {D}esign and {I}mplementation of an {O}perating {S}ystem in a {F}unctional {L}anguage},
  year   =      {1992},
  month  =      {October},
}

@PhdThesis{Srinivas,
  author =       {Yellamraju Venkata Sriniva},
  school =       {University of California, Irvine},
  title  =       {Pattern Matching: A Sheaf Theoretic Approach},
  keywords =     {pattern matching, sheaf, abstraction},
  year   =       {1991}
}

@PhdThesis{Espinosa95PHD,
  author =       "David Espinosa",
  title =        "Semantic {Lego}",
  year =         "1995",
  school =       "Columbia University",
  url =          "http://www-swiss.ai.mit.edu/ftpdir/users/dae/home.html",
  keywords =     "action semantics, monads",
}

@inproceedings{Filinski1994,
 author = {Andrzej Filinski},
 title = {Representing monads},
 booktitle = "Proceedings of the 21st {ACM} {SIGPLAN}-{SIGACT} {S}ymposium on {P}rinciples of {P}rogramming {L}anguages ({POPL} '94)",
 year = {1994},
 isbn = {0-89791-636-0},
 pages = {446--457},
 publisher = {ACM Press},
 }

@PhdThesis{Filinski1996,
  author = {Andrzej Filinski},
  school = {School of Computer Science, Carnegie Mellon University},
  title  = {Controlling Effects},
  year   = {1996},
}
 
@inproceedings{Filinski1999,
 author = {Andrzej Filinski},
 title = {Representing layered monads},
 booktitle = {Proceedings of the 26st {ACM} {SIGPLAN}-{SIGACT} {S}ymposium on {P}rinciples of {P}rogramming {L}anguages ({POPL} '99)},
 year = {1999},
 pages = {175--188},
 publisher = {ACM Press},
 }

@PhdThesis{ linthesis98,
  author = "Albert C. Lin",
  title  = "Implementing concurrency for an ml-based operating system",
  school = "Massachusetts Institute of Technology",
  month  = "February",
  year   = "1998",
  }

@inproceedings{ marlow01asynchronous,
    author    = {Simon Marlow and Simon L. Peyton Jones and Andrew Moran and John H. Reppy},
    title     = "Asynchronous Exceptions in Haskell",
    booktitle = "{{SIGPLAN}} Conference on Programming Language Design and Implementation",
    pages     = "274-285",
    year      = {2001},
    url       = {citeseer.ist.psu.edu/article/marlow01asynchronous.html}
}

@InProceedings{vanWeelden2002,
  author =       "Arjen van Weelden and Rinus Plasmeijer",
  title =        "Towards a Strongly Typed Functional Operating System",
  journal =      "Lecture Notes in Computer Science",
  booktitle =    "Proceedings 14th International Workshop on the Implementation of Functional Languages (IFL)",
  address =      "Madrid, Spain", 
  volume =       "2670",
  publisher =    "Springer-Verlag",
  series =       "Lecture Notes in Computer Science",
  year =         "2002",
}

@article{Denning76,
 author = {Dorothy Denning},
 title = {A Lattic Model of Secure Information Flow},
 journal = {Communications of the ACM},
 volume = {19},
 number = {5},
 year = {1976},
 pages = {236--243}
 }

@article{Jacobs03,
 author = {Bart Jacobs and Erik Poll},
 title = {Coalgebras and monads in the semantics of java},
 journal = {Theoretical Computer Science},
 volume = {291},
 number = {3},
 year = {2003},
 issn = {0304-3975},
 pages = {329--349},
 publisher = {Elsevier Science Publishers Ltd.},
 }

@inproceedings{ConcurrentHaskell96,
 author = {Simon {Peyton Jones} and Andrew Gordon and Sigbjorn Finne},
 title  = {Concurrent Haskell},
 booktitle = {Proceedings of the 23rd {ACM} {SIGPLAN}-{SIGACT} symposium on Principles of programming languages},
 year = {1996},
 isbn = {0-89791-769-3},
 pages = {295--308},
 location = {St. Petersburg Beach, Florida, United States},
 doi = {http://doi.acm.org/10.1145/237721.237794},
 publisher = {ACM Press},
 }

@InProceedings{pjw:imperative,
  author =      {Simon {Peyton Jones} and Phillip Wadler},
  title =       {Imperative Functional Programming},
  booktitle =   {Proceedings of the Twentieth Annual {ACM} Symposium
                 on Principles of Programming Languages, {Charleston,
                 South Carolina}},
  pages =       {71-84},
  year =        {1993},
  month =       {January}
}

@inproceedings{Launchbury94,
 author = {John Launchbury and Simon L. {Peyton Jones}},
 title = {Lazy functional state threads},
 booktitle = {Proceedings of the {ACM} {SIGPLAN} 1994 conference on Programming language design and implementation},
 year = {1994},
 isbn = {0-89791-662-X},
 pages = {24--35},
 location = {Orlando, Florida, United States},
 doi = {http://doi.acm.org/10.1145/178243.178246},
 publisher = {ACM Press},
 }

@InCollection{Henderson82,
  author =       "Peter Henderson",
  editor =       "J. Darlington and P. Henderson and D. Turner",
  title =        "Purely functional operating systems",
  booktitle =    "Functional Programming and its Applications: an
                 Advanced course",
  pages =        "177--191",
  publisher =    "Cambridge University Press",
  year =         "1982",
  keywords =     "FP, functional programming, applicative, lazy, need,
                 stream, streams, OS, c1982, c198x, c19xx",
  note =         "see Stirling TRs",
}

@inproceedings{Fudgets,
 author = {Magnus Carlsson and Thomas Hallgren},
 title = {FUDGETS: a graphical user interface in a lazy functional language},
 booktitle = {Proceedings of the conference on Functional programming languages and computer architecture},
 year = {1993},
 isbn = {0-89791-595-X},
 pages = {321--330},
 location = {Copenhagen, Denmark},
 doi = {http://doi.acm.org/10.1145/165180.165228},
 publisher = {ACM Press},
 }

%Discusses the Kent Applicative Operating System.
@inbook{Turner1990a,
 author       = "Turner, D.A.",
 title        = "An Approach to Functional Operating Systems",
 editors      = "Turner, D.A.",
 booktitle    = "Research Topics in Functional Programming",
 publisher    = "Addison-Wesley Publishing Company",
 pages        = "199--217",
 year         = "1990"
}

@techreport{Stoye1984a,
 author       = "Stoye, W.R.",
 title        = "A new scheme for writing functional operating systems",
 number       = "56",
 institution  = "Computer Laboratory, Cambridge University",
 year         = "1984"
}

@InProceedings{DomSep03,
  author =       "William Harrison and Mark Tullsen and James Hook",
  title =        "Domain Separation by Construction",
  booktitle =    "LICS03 Satellite Workshop on Foundations of Computer Security (FCS03)",
  month =        "June",
  year =         "2003",
}

@inproceedings{AwkwardSquad,
 author       = "Simon {Peyton Jones}",
 title        = "Tackling the Awkward Squad: monadic input/output,
                  concurrency, exceptions, and foreign-language calls in
                 Haskell",
    editors = "Tony Hoare and Manfred Broy and Ralf Steinbr{\"{u}}ggen",
    booktitle = "Engineering Theories of Software Construction",
    publisher = "IOS Press",
    year      = "2000",
    volume    = "III 180",
    series    = "NATO Science Series",
    pages        = "47--96",
}

@article{PeytonJones2000,
  author = "{Simon Peyton Jones}",
  title = "Lazy functional programming for real: Tackling the Awkward Squad",
  journal = "\url{research.microsoft.com/Users/simonpj/papers/marktoberdorf/Marktoberdorf}",
  year = "2000",
  }
 
@Article{oai:CiteSeerPSU:329871,
  title =        "Tackling the Awkward Squad: monadic input/output,
                 concurrency, exceptions, and foreign-language calls in
                 Haskell",
  author =       "Simon Peyton Jones",
  year =         "2000",
  month =        aug # "~01",
  abstract =     "Functional programming may be beautiful, but to write
                 real applications we must grapple with awkward
                 real-world issues: input/output, robustness,
                 concurrency, and interfacing to programs written in
                 other languages. These draft lecture notes, for the
                 2000 Marktoberdorf Summer School, give an overview of
                 the techniques that have been developed by the Haskell
                 community to address these problems. I introduce
                 various proposed extensions to Haskell along the way,
                 and I oer an operational semantics that explains what
                 these extensions mean. I have to deliver camera-ready
                 copy of the nal version of these notes in early
                 November 2000. If you have any suggestions for how I
                 might improve them before then, I would be absolutely
                 delighted to receive them. (My email address is above.)
                 I am particularly interested to know whether there are
                 any passages in which you got lost, or felt that you
                 missed the point, so that I can try to make them
                 clearer. The Powerpoint slides I used for the le...",
  citeseer-isreferncedby = "oai:CiteSeerPSU:73186;
                 oai:CiteSeerPSU:40675; oai:CiteSeerPSU:148774;
                 oai:CiteSeerPSU:83413",
  citeseer-references = "oai:CiteSeerPSU:24825; oai:CiteSeerPSU:393979;
                 oai:CiteSeerPSU:28870; oai:CiteSeerPSU:20514;
                 oai:CiteSeerPSU:17577; oai:CiteSeerPSU:100604;
                 oai:CiteSeerPSU:153267; oai:CiteSeerPSU:276228;
                 oai:CiteSeerPSU:334401; oai:CiteSeerPSU:286334;
                 oai:CiteSeerPSU:63767; oai:CiteSeerPSU:75442;
                 oai:CiteSeerPSU:397650; oai:CiteSeerPSU:12235;
                 oai:CiteSeerPSU:292144; oai:CiteSeerPSU:10679;
                 oai:CiteSeerPSU:93698; oai:CiteSeerPSU:23610;
                 oai:CiteSeerPSU:18885",
  annote =       "The Pennsylvania State University CiteSeer Archives",
  language =     "en",
  oai =          "oai:CiteSeerPSU:329871",
  rights =       "unrestricted",
  subject =      "Simon Peyton Jones Tackling the Awkward Squad: monadic
                 input/output, concurrency, exceptions, and
                 foreign-language calls in Haskell",
  URL =          "http://citeseer.ist.psu.edu/329871.html;
                 http://research.microsoft.com/Users/simonpj/papers/marktoberdorf.ps.gz",
}

@InProceedings{ gibbons99proof,
  author = "Jeremy Gibbons and Graham Hutton",
  title = "Proof methods for structured corecursive programs",
  booktitle = "1st Scottish Functional Programming Workshop, Stirling,
    Scotland",
  year = "1999",
  month = "August",
  URL = {}
  }

@InProceedings{Rushby81,
  author =       "John  Rushby",
  year =         "1981",
  title =        "Design and Verification of Secure Systems",
  booktitle =    "Proceedings of the {ACM} Symposium on Operating System Principles",
  volume =       "15",
  pages =        "12--21",
  keywords =     "security, operating system nel, distributed systems,
                 proof by separability, verification",
}

@InProceedings{GoguenMeseguer82,
  author =       "J. A. Goguen and Jose' Meseguer",
  title =        "Security Policies and Security Models",
  pages =        "11--20",
  booktitle =    "Proceedings of the 1982 Symposium on Security and
                 Privacy ({SSP} '82)",
  month =        apr,
  publisher =    "{IEEE} Computer Society Press",
  address =      "Los Alamitos, Ca., USA",
  year =         "1990",
}

@Article{GAL,
  author =       "Graham Hutton and Jeremy Gibbons",
  title =        "The generic approximation lemma",
  journal =      "Information Processing Letters",
  volume =       "79",
  number =       "4",
  pages =        "197--201",
  day =          "15",
  month =        aug,
  year =         "2001",
  coden =        "IFPLAT",
  ISSN =         "0020-0190",
  bibdate =      "Wed Jul 25 16:11:36 MDT 2001",
  URL =          {},
  acknowledgement = ack-nhfb,
}
@unpublished{GibbonsHutton04,
        author = "Jeremy Gibbons and Graham Hutton",
        title = "{Proof Methods for Corecursive Programs}",
        note = "Submitted to Fundamenta Informaticae Special
		Issue on Program Transformation",
	month = mar,
        year = 2004}

@article{Stoye86,
 author = {William Stoye},
 title = {Message-based functional operating systems},
 journal = {Science of Computer Programming},
 volume = {6},
 number = {3},
 year = {1986},
 issn = {0167-6423},
 pages = {291--311},
 publisher = {Elsevier North-Holland, Inc.},
 }

@PhdThesis{Papaspyrou1998,
  author =       "N.S. Papaspyrou",
  title =        "A formal semantics for the {C} programming language",
  school =       "National Technical University of Athens, "
               # "Department of Electrical and Computer Engineering, "
               # "Software Engineering Laboratory",
  year =         1998,
  month =        feb,
  language =     en,
  urlps =        "ftp://ftp.softlab.ntua.gr/pub/users/nickie/papers/"
               # "thesis.ps.gz",
  bibcategory =  "thesis",
  bibfiles =     "personal",
  bibwhere =     "personal"
}

@inproceedings{ Papaspyrou2001,
   author = "Nikos S. Papaspyrou",
   title = "{A Resumption Monad Transformer and its Applications in the Semantics of Concurrency}",
   booktitle = "{Proceedings of the 3rd Panhellenic Logic Symposium}", 
   address = "Anogia, Crete, July 17--22",
   year = "2001",
                }

@Article{Papaspyrou2000,
  author =       "N.S. Papaspyrou and D. Macos",
  title =        "A study of evaluation order semantics in Expressions "
               # "with Side Effects",
  journal =      "Journal of Functional Programming",
  volume  = "10",
  number = "3", 
  pages = "227-244", 
  month = "May",
  year = "2000",
}

@Book{Schmidt86,
  author =       "David A. Schmidt",
  title =        "Denotational Semantics",
  subtitle =     "A Methodology for Language Development",
  publisher =    "Allyn and Bacon",
  address =      "Boston",
  year =         "1986",
  pages =        "xiii+331",
  ISBN =         "0-205-08974-7",
  callno =       "QA76.7.S34",
  checked =      "13 August 1992",
}

@TechReport{MoggiNotes,
  author =       "Eugenio Moggi",
  institution =  "Dept. of Computer Science, Edinburgh Univ.",
  title =        "An Abstract View of Programming Languages",
  year =         "1990",
  document-size = "63.3 kbytes",
  url =          "http://theory.doc.ic.ac.uk/papers/MoggiE/abs-view.dvi.gz",
  number =       "ECS-LFCS-90-113",
  scope =        "monads",
}

@Article{HoareCSP,
  author =       "C. A. R. Hoare",
  title =        "Communicating Sequential Processes",
  journal =      "Communications of the {ACM}",
  volume =       "21",
  number =       "8",
  pages =        "666--677",
  month =        aug,
  year =         "1978",
  coden =        "CACMA2",
  ISSN =         "0001-0782",
  bibdate =      "Mon Jan 22 06:50:24 MST 2001",
  note =         "See corrigendum \cite{Hoare:1978:CCS}.",
  abstract =     "This paper suggests that input and output are basic
                 primitives of programming and that parallel composition
                 of communicating sequential processes is a fundamental
                 program structuring method. When combined with a
                 development of Dijkstra's guarded command, these
                 concepts are surprisingly versatile. \par Their use is
                 illustrated by sample solutions of a variety of
                 familiar programming exercises.",
  acknowledgement = ack-nhfb,
  annote =       "This paper is now expanded into an excellent book
                 detailed by Hoare and published by Prentice-Hall. This
                 paper is reproduced in Kuhn and Padua's (1981, {IEEE})
                 survey ``Tutorial on Parallel Processing.'' Reproduced
                 in ``Distributed Computing: Concepts and
                 Implementations'' edited by McEntire, O'Reilly and
                 Larson, {IEEE}, 1984. Somewhat dated.",
  classcodes =   "C6110 (Systems analysis and programming)",
  classification = "723",
  corpsource =   "Queen's Univ., Belfast, UK",
  journalabr =   "Commun ACM",
  keywords =     "4.22; 4.32 maeder biblio: synchronisation and
                 concurrency in processes; ak; bhibbard grecommended91;
                 classes; computer programming; concurrency; conditional
                 critical regions; coroutines; CR categories: 4.20; CSP;
                 data representations; Dijkstra's guarded command;
                 guarded commands; hcc; input; iterative arrays;
                 k-concurrency; k-csp; k-guarded-commands; monitors;
                 multiple entries; multiple exits; nondeterminacy;
                 output; parallel composition; parallel programming;
                 primitives; procedures; program; program structures;
                 programming; Programming; programming languages;
                 programming primitives; recursion; sequential
                 processes; structured programming; structuring method",
  oldlabel =     "Hoare78",
  treatment =    "T Theoretical or Mathematical",
  xmldata =      "ftp://ftp.informatik.uni-trier.de/pub/users/Ley/bib/records.tar.gz#journals/cacm/Hoare78",
}

@inproceedings{ launchbury97monadic,
    author = "John Launchbury and Amr Sabry",
    title = "Monadic State: Axiomatization and Type Safety",
    booktitle = "{{ACM} {SIGPLAN} International Conference on Functional Programming}",
    pages = "227--238",
    year = "1997",
    url = "citeseer.nj.nec.com/article/launchbury97monadic.html" }

@inproceedings{ wadler92essence,
    author = "Philip Wadler",
    title = "{The Essence of Functional Programming}",
    booktitle = "{Proceedings of the 19th Symposium on Principles of Programming Languages}",
    publisher = "{ACM} Press",
    address = "Albuquerque, New Mexico, January 19 -- 22",
    pages = "1--14",
    year = "1992",
    url = "citeseer.nj.nec.com/wadler92essence.html" }

@InProceedings{LiangHudak,
  author =       "Sheng Liang and Paul Hudak and Mark Jones",
  title =        "Monad transformers and modular interpreters",
  booktitle =    "22nd {ACM}
                 {{SIGPLAN}-{SIGACT}} Symposium on Principles of Programming
                 Languages, 1995",
  publisher =    "ACM Press",
  address =      "New York, NY, USA",
  year =         "1995",
  ISBN =         "0-89791-692-1",
  pages =        "333--343",
  bibdate =      "Mon May 3 12:52:30 MDT 1999",
  OPTurl =          "http://www.acm.org:80/pubs/citations/proceedings/plan/199448/p333-liang/",
  abstract =     "We show how a set of {\em building blocks\/} can be
                 used to construct programming language interpreters,
                 and present implementations of such building blocks
                 capable of supporting many commonly known features,
                 including simple expressions, three different function
                 call mechanisms (call-by-name, call-by-value and lazy
                 evaluation), references and assignment, nondeterminism,
                 first-class continuations, and program tracing. The
                 underlying mechanism of our system is {\em monad
                 transformers\/}, a simple form of abstraction for
                 introducing a wide range of computational behaviors,
                 such as state, I/O, continuations, and exceptions. Our
                 work is significant in the following respects. First,
                 we have succeeded in designing a fully modular
                 interpreter based on monad transformers that incudes
                 features missing from Steele's, Espinosa's, and
                 Wadler's earlier efforts. Second, we have found new
                 ways to lift monad operations through monad
                 transformers, in particular difficult cases not
                 achieved in Moggi's original work. Third, we have
                 demonstrated that interactions between features are
                 reflected in liftings and that semantics can be changed
                 by reordering monad transformers. Finally, we have
                 implemented our interpreter in Gofer, whose constructor
                 classes provide just the added power over Haskell's
                 type classes to allow precise and convenient expression
                 of our ideas. This implementation includes a method for
                 constructing extensible unions and a form of subtyping
                 that is interesting in its own right.",
  acknowledgement = ack-nhfb,
  keywords =     "algorithms; design; languages",
  subject =      "{\bf D.3.4} Software, PROGRAMMING LANGUAGES,
                 Processors, Interpreters. {\bf F.3.2} Theory of
                 Computation, LOGICS AND MEANINGS OF PROGRAMS, Semantics
                 of Programming Languages, Denotational semantics. {\bf
                 D.3.3} Software, PROGRAMMING LANGUAGES, Language
                 Constructs and Features, Data types and structures.",
}

@Article{Wad92:monads,
  author =       "P. Wadler",
  title =        "Comprehending monads",
  journal =      "Mathematical Structures in Computer Science",
  pages =        "461--493",
  year =         "1992",
  volume =       "2",
  OPTnote =         "Category theorists invented {\em monads\/} in the
                 1960's to concisely express certain aspects of
                 universal algebra. Functional programmers invented {\em
                 list comprehensions\/} in the 1970's to concisely
                 express certain programs involving lists. This paper
                 shows how list comprehensions may be generalised to an
                 arbitrary monad, and how the resulting programming
                 feature can concisely express in a pure functional
                 language some programs that manipulate state, handle
                 exceptions, parse text, or invoke continuations. A new
                 solution to the old problem of destructive array update
                 is also presented. No knowledge of category theory is
                 assumed.",
}

@Article{Wadler95,
  author =       "Phillip Wadler",
  title =        "Monads for functional programming",
  journal =      "Lecture Notes in Computer Science",
  volume =       "925",
  pages =        "24--52",
  year =         "1995",
  coden =        "LNCSD9",
  ISSN =         "0302-9743",
  bibdate =      "Sat May 11 13:45:32 MDT 1996",
  acknowledgement = ack-nhfb,
}

@Article{PeytonJone92a,
  author =       "Simon L. Peyton Jones",
  journal =      "Journal of Functional Programming",
  title =        "Implementing lazy functional languages on stock
                 hardware: the Spineless Tagless {G}-machine",
  year =         "92",
  document-size = "211.2 kbytes",
  OPTurl =          "ftp://ftp.dcs.gla.ac.uk/pub/glasgow-fp/papers/spineless-tagless-gmachine.ps.Z",
  month =        jul,
  number =       "2",
  pages =        "127--202",
  volume =       "2",
  scope =        "implemen",
}

@Article{Wadler92,
  author =       "P. Wadler",
  title =        "The essence of functional programming.",
  journal =      "19th POPL",
  pages =        "1--14",
  publisher =    "{ACM}",
  month =        jan,
  year =         "1992",
  keywords =     "FP, functional programming, monad, monads, exception,
                 state, continuations, type, types, POPL, POPL19,
                 POPL92",
}

@Article{Hall:1994:TCH,
  author =       "C. Hall and K. Hammond and S. Peyton Jones and P.
                 Wadler",
  title =        "Type classes in Haskell",
  journal =      "Lecture Notes in Computer Science",
  volume =       "788",
  pages =        "241--??",
  year =         "1994",
  coden =        "LNCSD9",
  ISSN =         "0302-9743",
  bibdate =      "Mon May 13 11:52:14 MDT 1996",
  acknowledgement = ack-nhfb,
}

@InProceedings{TS97,
  author =       "W. Taha and T. Sheard",
  title =        "Multi-Stage Programming with Explicit Annotations",
  pages =        "203--217",
  ISSN =         "0362-1340",
  booktitle =    "Proceedings of the {ACM} {{SIGPLAN}} Symposium on
                 Partial Evaluation and Semantics-Based Program
                 Manipulation ({PEPM}-97)",
  month =        jun # "~12--13",
  series =       "{ACM} {SIGPLAN} Notices",
  volume =       "32, 12",
  publisher =    "ACM Press",
  address =      "New York",
  year =         "1997",
}

@InProceedings{mpj:con-classes,
  author =       "Mark P. Jones",
  title =        "A System of Constructor Classes: Overloading and
                 Implicit Higher-Order Polymorphism",
  pages =        "52--64",
  ISBN =         "0-89791-595-X",
  booktitle =    "Proceedings of the Conference on Functional
                 Programming Languages and Computer Architecture",
  month =        jun,
  publisher =    "{ACM} Press",
  address =      "New York, NY, USA",
  year =         "1993",
}

@InProceedings{OderskyLaeufer96,
  author =       "Martin Odersky and Konstantin L{\"a}ufer",
  title =        "Putting type annotations to work",
  editor =       "{ACM}",
  booktitle =    "Conference record of {POPL} '96, 23rd {ACM}
                 {{SIGPLAN}-{SIGACT}} Symposium on Principles of Programming
                 Languages: papers presented at the Symposium: St.
                 Petersburg Beach, Florida, 21--24 January 1996",
  publisher =    "{ACM} Press",
  address =      "New York, NY, USA",
  year =         "1996",
  ISBN =         "0-89791-769-3",
  pages =        "54--67",
  bibdate =      "Mon May 3 12:54:36 MDT 1999",
  url =          "http://www.acm.org:80/pubs/citations/proceedings/plan/237721/p54-odersky/",
  acknowledgement = ack-nhfb,
  keywords =     "theory; verification",
  subject =      "{\bf F.3.3} Theory of Computation, LOGICS AND MEANINGS
                 OF PROGRAMS, Studies of Program Constructs, Type
                 structure.",
}

@book{CC1,
  title      = {Common Criteria for Information Technology Security Evaluation, Part 1: Introduction and general model},
  year       = {1999},
  volume     = {1}
}

@book{CC2,
  title      = {Common Criteria for Information Technology Security Evaluation, Part 2: Security functional requirements},
  year       = {1999},
  volume     = {2}
}

@book{CC3,
  title      = {Common Criteria for Information Technology Security Evaluation, Part 3: Security assurance requirements},
  year       = {1999},
  volume     = {3}
}

@TechReport{PPSK,
  author =       "Information Assurance Directorate",
  institution =  "National Security Agency",
  title =        "U.S. Government Protection Profile for Separation Kernels in Environments Requiring High Robustness",
  year =         "2004",
  scope =        "Separation Kernels"
}

@TechReport{PPFW,
  author =       "Department of Defense",
  title  =       "U.S. Department of Defense Traffic-Filter Firewall Protection Profile for Medium Robustness Environments",
  institution =  "U.S. Department of Defense",
  year =         "2000",
  scope =        "Firewalls"
}

@TechReport{NoninterferenceRushby,
  author =       "John Rushby",
  title  =       "Noninterference, Transitivity, and Channel-Control Security Policies",
  institution =  "Computer Science Laboratory, SRI International",
  year  =        "1992",
  month =        "December",
  scope =        "Noninterference policies"
}

@TechReport{NoninterferenceOheimb,
  author =       "David von Oheimb",
  title  =       "Information flow control revisited: Noninfluence = Noninterference + Nonleakage",
  institution =  "Siemens CT IC",
  year  =        "2004",
  scope =        "Noninterference policies"
}
