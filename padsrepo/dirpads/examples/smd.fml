ptype 'a pair (key, value) = <key:string> * '=' * [x:'a | x = value] * '\n'

(* type that describes the smd file whose first line 
contains a reference to the experiment number exp_no *)
ptype smd_exp (exp_no) =
{
 id: pint pair ("!Exptid=", exp_no);
 ...
}

(* decription of one of the smd file names *) 
ptype file_name = pint * ".xls"

(* the directory that contains all the .xls untarred from the downloaded tar file *)

ptype untarred_dir =
  directory {
    smd_files : file_name [] [TIMESTAMP>=today] (smd_exp(MYPATH.1));
  }


mirror smd_files = 
[| 
  source = "ftp://smd-ftp.stanford.edu/pub/smd/publications/100/810/exptsetno_810.tar.gz";
  dest = "/home/kzhu/smd"; (* this field is optional *)
  schedule = poll at 5 mins interval; 
  pp = UNTAR;
|]

feed tables = 
[ base {|
  	  sources = all [f];
	  schedule = once, timeout 1 sec;
	  format = SMD.Source;
       |} 
  | f <- files as smd_files.[*]
]




(******** IGNORE FOLLOWING ***********)

feed expset =
base {| 
  sources = all ["ftp://smd-ftp.stanford.edu/pub/smd/publications/100/810/exptsetno_810.tar.gz"];
  schedule = once, timeout 1 min; 
  (* schedule = poll [at 5 mins interval [increasing]] *)
  pp = (fun f = 
    	  let _ = Sys.command ("mkdir /tmp/xyz; cd /tmp/xyz; tar fvxz " ^ f)
	  in (Array.to_list Sys.readdir "/tmp/xyz"));
  format = SMD.Source list
  (* format = "1277.xls" -> SMD.Source,
	      "1277.meta" -> SMD.meta
  *) 


feed file_names =
base {|
 sources = all 
 ["ftp://smd-ftp.stanford.edu/pub/smd/publications/100/810/exptsetno_810.tar.gz"];
 schedule = once, timeout 1 min;
 pp = (fun f =
         let _ = Sys.command ("mkdir /tmp/xyz; cd /tmp/xyz; tar fvxz  
" ^ f ^ " >& /tmp/files")
         in "/tmp/files");
 format = Unix_format.Lines
|}

feed tables =
 foreach file_list in file_names create
 [ base {|
     sources = all ["file:///tmp/xyz/" ^ f];
     schedule = once, timeout 1 sec;
     format = SMD.Source;
   |} | f <- file_list
 ]
