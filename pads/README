=========================================
  Building, Intalling, and Testing
   the PADSC Compiler and Library
=========================================

Note: these instructions use GNU make (often called gmake or make).
Be sure that the make program you are using is GNU make before
proceeding.

STEP 1: ENVIRONMENT SETUP

Suppose you checked out the pads module in /home/fred/pads.  You
must arrange to have env variable PADS_HOME set to this location
before doing other steps.  Once PADS_HOME is set, you can source a
DO_SETENV script that will set the other env variables that you will
need (INSTALLROOT, PATH, LD_LIBRARY_PATH, etc.).
DO_SETENV will also make your installation directories
(rooted at INSTALLROOT) if they do not exist yet.

Below are instructions for different kinds of shells.
You could do the following by hand, or add them to your shell init script.
Note: Use DO_SETENV rather than Q_DO_SETENV when running from
the command line to see how the env variables that are set up.

For csh/tcsh users:
  setenv PADS_HOME /home/fred/pads
  source $PADS_HOME/scripts/Q_DO_SETENV.tcsh

For sh/ksh/bash users:
  export PADS_HOME=/home/fred/pads
  . $PADS_HOME/scripts/Q_DO_SETENV.sh

Install link to SML runtime environment in $PADS_HOME/binlinks
  Follow instructions in $PADS_HOME/binlinks/README

STEP 2: BUILD AND INSTALL libast

Folks at AT&T Labs Research (who were also at Bell Labs before the
AT&T - Lucent split) collect many useful C routines in a
single library called libast.  PADS uses this library, so you need
to build it: 

> cd $PADS_HOME/ast-base
> bin/package make

(Before you issue this command, make sure INSTALLROOT has been set
by one of the DO_SETENV scripts!)

If everything goes as planned, the following files will end up being
installed in directory $PADS_HOME/ast-base/arch/$AST_ARCH/lib:

   libast.a
   libast.so
   libast.so.5.4

where the latter 2 are really 2 names for the same file.

*** NB Right now the entire ast-base package is built.  This contains
*** a lot more stuff than libast, and we will eventually produce a
*** smaller package just for building libast.  In the meantime:
*** you may get some errors during the package build that have
*** nothing to do with libast.  If the 3 libast files above are built
*** successfully, then you are done with step 2.

If you got the PADS distribution from a CVS repository,
then after building libast, you may with to execute:

> $PADS_HOME/scripts/fix_ast_base.tcsh

This will get rid of a small modification to
two files under $PADS_HOME/ast-base/bin that
need not be preserved and are simply annoying.

STEP 3: BUILD AND INSTALL THE PADSC LIBRARY

> cd $PADS_HOME/padsc/libpadsc
> gmake install

STEP 4: TEST THE PADSC LIBRARY

> cd $PADS_HOME/padsc/libpadsc/tests
> gmake

This causes a set of regression tests for the library
to be built and run.  If you see a message of the form 

    test_foo DIFFERS

then there is a problem with the test_foo test.

STEP 5: BUILD THE COMPILER

> cd $PADS_HOME/padsc/comp
> gmake

STEP 6: TEST THE COMPILER

> cd $PADS_HOME/padsc/examples/tests
> gmake

This causes a set of regression tests for the compiler/library
to be built and run. If you see a message of the form 

    test_foo DIFFERS

then there is a problem with the test_foo test.

=========================================
  Using the PADSC Compiler and Library
=========================================

XXX_TODO: write more documentation here.

For example, should point out that padsc script is in
$PADS_HOME/scripts.

