ptype pdate_t = pstring_ME ("/[1-2][0-9][0-9][0-9]_[0-1][0-9]/")
ptype ptime_t = pstring_ME ("/[0-9][0-9]_[0-9][0-9]/")
ptype ptimestamp_t = pdate_t * '-' * ptime_t
ptype phostname_t = ...

ptype corald_ty   = ...  {- pads description -}
ptype coraldns_ty = ...  {- pads description -}
ptype coralweb_ty = ...  {- pads description -}
ptype probe_ty    = ...  {- pads description -}

ptype host_info_d(ptimestamp_t t) =  pdirectory {
  corald   is  "corald.log.head"      :: corald_ty   <| (timestamp >= t) && (owner == "dpw") |>;
  coraldns is  "coraldnssrv.log.head" :: coraldns_ty <| (timestamp >= t) && (owner == "dpw") |>;
  coralweb is  "coralwebsrv.log.head" :: coralweb_ty <| (timestamp >= t) && (owner == "dpw") |>; 
  probe    is  "probed.log.head"      :: probe_ty    <| (timestamp >= t) && (owner == "dpw") |>;
  time :: ptimestamp_t = t;
 }



ptype coral_d =  pdirectory {
   hosts is {(host :: phostname_t)/(time :: ptimestamp_t)} :: host_info_d(host,time) dlist;
 }

ptype coral_d =  pdirectory {
   hosts is  [host_info_d(host,time) | (host,time) <- (host :: Phostname_t)/(time :: Ptimestamp_t)]
 }

ptype coral_d =  pdirectory {
   hosts is  [host_info_d(host,time) | (host :: Phostname_t)/(time :: Ptimestamp_t)]
 }


alternative:

ptype machine_d = pdirectory {
  info is {t::ptime} :: host_d(t) dlist;
}

or:
ptype machine_d = pdirectory {
  info is [t :: host_info_d(t) | t <- Ptime_t ];
}


ptype coral_d = pdirectory {
 hostNames is "Config" :: hostNames_f;
 hosts is [h :: machine_d | h <- hostNames];
}

