structure TokensLex  = struct

    structure yyInput : sig

        type stream
	val mkStream : (int -> string) -> stream
	val fromStream : TextIO.StreamIO.instream -> stream
	val getc : stream -> (Char.char * stream) option
	val getpos : stream -> int
	val getlineNo : stream -> int
	val subtract : stream * stream -> string
	val eof : stream -> bool
	val lastWasNL : stream -> bool

      end = struct

        structure TIO = TextIO
        structure TSIO = TIO.StreamIO
	structure TPIO = TextPrimIO

        datatype stream = Stream of {
            strm : TSIO.instream,
	    id : int,  (* track which streams originated 
			* from the same stream *)
	    pos : int,
	    lineNo : int,
	    lastWasNL : bool
          }

	local
	  val next = ref 0
	in
	fun nextId() = !next before (next := !next + 1)
	end

	val initPos = 2 (* ml-lex bug compatibility *)

	fun mkStream inputN = let
              val strm = TSIO.mkInstream 
			   (TPIO.RD {
			        name = "lexgen",
				chunkSize = 4096,
				readVec = SOME inputN,
				readArr = NONE,
				readVecNB = NONE,
				readArrNB = NONE,
				block = NONE,
				canInput = NONE,
				avail = (fn () => NONE),
				getPos = NONE,
				setPos = NONE,
				endPos = NONE,
				verifyPos = NONE,
				close = (fn () => ()),
				ioDesc = NONE
			      }, "")
	      in 
		Stream {strm = strm, id = nextId(), pos = initPos, lineNo = 1,
			lastWasNL = true}
	      end

	fun fromStream strm = Stream {
		strm = strm, id = nextId(), pos = initPos, lineNo = 1, lastWasNL = true
	      }

	fun getc (Stream {strm, pos, id, lineNo, ...}) = (case TSIO.input1 strm
              of NONE => NONE
	       | SOME (c, strm') => 
		   SOME (c, Stream {
			        strm = strm', 
				pos = pos+1, 
				id = id,
				lineNo = lineNo + 
					 (if c = #"\n" then 1 else 0),
				lastWasNL = (c = #"\n")
			      })
	     (* end case*))

	fun getpos (Stream {pos, ...}) = pos

	fun getlineNo (Stream {lineNo, ...}) = lineNo

	fun subtract (new, old) = let
	      val Stream {strm = strm, pos = oldPos, id = oldId, ...} = old
	      val Stream {pos = newPos, id = newId, ...} = new
              val (diff, _) = if newId = oldId andalso newPos >= oldPos
			      then TSIO.inputN (strm, newPos - oldPos)
			      else raise Fail 
				"BUG: yyInput: attempted to subtract incompatible streams"
	      in 
		diff 
	      end

	fun eof s = not (isSome (getc s))

	fun lastWasNL (Stream {lastWasNL, ...}) = lastWasNL

      end

    datatype yystart_state = 
INITIAL
    structure UserDeclarations = 
      struct

type lexresult = (Tokens.Token * {beginloc:int, endloc:int}) option
fun eof () = NONE
fun getLoc (yypos, yytext) = {beginloc=yypos, endloc=yypos + size(yytext) -1}

fun getFirst s isBegin = 
    let val ss = Substring.full s
        val beginTrim = if isBegin then 1 else 2
        val stripped = Substring.trimr 1 (Substring.triml beginTrim ss) 
        val (lss, rss) =  Substring.splitl Char.isSpace stripped
        val result = if Substring.isEmpty lss then (Substring.string rss, "")
                     else (Substring.string lss, Substring.string rss)
    in
       result
    end



      end

    datatype yymatch 
      = yyNO_MATCH
      | yyMATCH of yyInput.stream * action * yymatch
    withtype action = yyInput.stream * yymatch -> UserDeclarations.lexresult

    local

    val yytable = 
#[
([(#"\^@",#"\b",1),
(#"\v",#"\f",1),
(#"\^N",#"\^_",1),
(#"!",#"/",1),
(#":",#";",1),
(#"=",#"@",1),
(#"[",#"`",1),
(#"{",#"\255",1),
(#"\t",#"\t",2),
(#"\r",#"\r",2),
(#" ",#" ",2),
(#"\n",#"\n",3),
(#"0",#"0",4),
(#"1",#"1",5),
(#"2",#"2",6),
(#"3",#"3",7),
(#"4",#"9",8),
(#"<",#"<",9),
(#"A",#"A",10),
(#"B",#"C",11),
(#"E",#"E",11),
(#"G",#"I",11),
(#"K",#"L",11),
(#"P",#"R",11),
(#"U",#"V",11),
(#"X",#"Z",11),
(#"b",#"c",11),
(#"e",#"e",11),
(#"g",#"i",11),
(#"k",#"l",11),
(#"p",#"r",11),
(#"u",#"v",11),
(#"x",#"z",11),
(#"D",#"D",12),
(#"F",#"F",13),
(#"J",#"J",14),
(#"M",#"M",15),
(#"N",#"N",16),
(#"O",#"O",17),
(#"S",#"S",18),
(#"T",#"T",19),
(#"W",#"W",20),
(#"a",#"a",21),
(#"d",#"d",22),
(#"f",#"f",23),
(#"j",#"j",24),
(#"m",#"m",25),
(#"n",#"n",26),
(#"o",#"o",27),
(#"s",#"s",28),
(#"t",#"t",29),
(#"w",#"w",30)], []), ([], [8]), ([(#"\t",#"\n",679),
(#"\r",#"\r",679),
(#" ",#" ",679)], [5, 8]), ([(#"\t",#"\n",679),
(#"\r",#"\r",679),
(#" ",#" ",679)], [5, 9]), ([(#".",#".",261),
(#"0",#"0",678),
(#"1",#"9",677)], [6, 8]), ([(#"\t",#"\t",109),
(#" ",#" ",109),
(#"-",#"-",257),
(#".",#".",258),
(#"/",#"/",259),
(#"0",#"2",677),
(#"3",#"9",487)], [6, 8]), ([(#"\t",#"\t",109),
(#" ",#" ",109),
(#"-",#"-",257),
(#".",#".",258),
(#"/",#"/",259),
(#"0",#"9",487)], [6, 8]), ([(#"\t",#"\t",109),
(#" ",#" ",109),
(#"-",#"-",257),
(#".",#".",258),
(#"/",#"/",259),
(#"0",#"1",480),
(#"2",#"9",260)], [6, 8]), ([(#"\t",#"\t",109),
(#" ",#" ",109),
(#"-",#"-",257),
(#".",#".",258),
(#"/",#"/",259),
(#"0",#"9",260)], [6, 8]), ([(#"/",#"/",252),
(#"A",#"Z",253),
(#"a",#"z",253)], [8]), ([(#"-",#"-",31),
(#"0",#"9",31),
(#"A",#"Z",31),
(#"_",#"_",31),
(#"a",#"o",31),
(#"q",#"t",31),
(#"v",#"z",31),
(#"p",#"p",246),
(#"u",#"u",247)], [7, 8]), ([(#"-",#"-",31),
(#"0",#"9",31),
(#"A",#"Z",31),
(#"_",#"_",31),
(#"a",#"z",31)], [7, 8]), ([(#"-",#"-",31),
(#"0",#"9",31),
(#"A",#"Z",31),
(#"_",#"_",31),
(#"a",#"d",31),
(#"f",#"z",31),
(#"e",#"e",245)], [7, 8]), ([(#"-",#"-",31),
(#"0",#"9",31),
(#"A",#"Z",31),
(#"_",#"_",31),
(#"a",#"d",31),
(#"f",#"q",31),
(#"s",#"z",31),
(#"e",#"e",241),
(#"r",#"r",242)], [7, 8]), ([(#"-",#"-",31),
(#"0",#"9",31),
(#"A",#"Z",31),
(#"_",#"_",31),
(#"b",#"t",31),
(#"v",#"z",31),
(#"a",#"a",233),
(#"u",#"u",234)], [7, 8]), ([(#"-",#"-",31),
(#"0",#"9",31),
(#"A",#"Z",31),
(#"_",#"_",31),
(#"b",#"n",31),
(#"p",#"z",31),
(#"a",#"a",230),
(#"o",#"o",217)], [7, 8]), ([(#"-",#"-",31),
(#"0",#"9",31),
(#"A",#"Z",31),
(#"_",#"_",31),
(#"a",#"n",31),
(#"p",#"z",31),
(#"o",#"o",228)], [7, 8]), ([(#"-",#"-",31),
(#"0",#"9",31),
(#"A",#"Z",31),
(#"_",#"_",31),
(#"a",#"b",31),
(#"d",#"z",31),
(#"c",#"c",226)], [7, 8]), ([(#"-",#"-",31),
(#"0",#"9",31),
(#"A",#"Z",31),
(#"_",#"_",31),
(#"b",#"d",31),
(#"f",#"t",31),
(#"v",#"z",31),
(#"a",#"a",215),
(#"e",#"e",216),
(#"u",#"u",217)], [7, 8]), ([(#"-",#"-",31),
(#"0",#"9",31),
(#"A",#"Z",31),
(#"_",#"_",31),
(#"a",#"g",31),
(#"i",#"t",31),
(#"v",#"z",31),
(#"h",#"h",211),
(#"u",#"u",212)], [7, 8]), ([(#"-",#"-",31),
(#"0",#"9",31),
(#"A",#"Z",31),
(#"_",#"_",31),
(#"a",#"d",31),
(#"f",#"z",31),
(#"e",#"e",204)], [7, 8]), ([(#"-",#"-",31),
(#"0",#"9",31),
(#"A",#"Z",31),
(#"_",#"_",31),
(#"a",#"o",31),
(#"q",#"t",31),
(#"v",#"z",31),
(#"p",#"p",202),
(#"u",#"u",203)], [7, 8]), ([(#"-",#"-",31),
(#"0",#"9",31),
(#"A",#"Z",31),
(#"_",#"_",31),
(#"a",#"d",31),
(#"f",#"z",31),
(#"e",#"e",201)], [7, 8]), ([(#"-",#"-",31),
(#"0",#"9",31),
(#"A",#"Z",31),
(#"_",#"_",31),
(#"a",#"d",31),
(#"f",#"q",31),
(#"s",#"z",31),
(#"e",#"e",199),
(#"r",#"r",200)], [7, 8]), ([(#"-",#"-",31),
(#"0",#"9",31),
(#"A",#"Z",31),
(#"_",#"_",31),
(#"b",#"t",31),
(#"v",#"z",31),
(#"a",#"a",197),
(#"u",#"u",198)], [7, 8]), ([(#"-",#"-",31),
(#"0",#"9",31),
(#"A",#"Z",31),
(#"_",#"_",31),
(#"b",#"n",31),
(#"p",#"z",31),
(#"a",#"a",196),
(#"o",#"o",171)], [7, 8]), ([(#"-",#"-",31),
(#"0",#"9",31),
(#"A",#"Z",31),
(#"_",#"_",31),
(#"a",#"n",31),
(#"p",#"z",31),
(#"o",#"o",195)], [7, 8]), ([(#"-",#"-",31),
(#"0",#"9",31),
(#"A",#"Z",31),
(#"_",#"_",31),
(#"a",#"b",31),
(#"d",#"z",31),
(#"c",#"c",194)], [7, 8]), ([(#"-",#"-",31),
(#"0",#"9",31),
(#"A",#"Z",31),
(#"_",#"_",31),
(#"b",#"d",31),
(#"f",#"t",31),
(#"v",#"z",31),
(#"a",#"a",169),
(#"e",#"e",170),
(#"u",#"u",171)], [7, 8]), ([(#"-",#"-",31),
(#"0",#"9",31),
(#"A",#"Z",31),
(#"_",#"_",31),
(#"a",#"g",31),
(#"i",#"t",31),
(#"v",#"z",31),
(#"h",#"h",167),
(#"u",#"u",168)], [7, 8]), ([(#"-",#"-",31),
(#"0",#"9",31),
(#"A",#"Z",31),
(#"_",#"_",31),
(#"a",#"d",31),
(#"f",#"z",31),
(#"e",#"e",32)], [7, 8]), ([(#"-",#"-",31),
(#"0",#"9",31),
(#"A",#"Z",31),
(#"_",#"_",31),
(#"a",#"z",31)], [7]), ([(#"-",#"-",31),
(#"0",#"9",31),
(#"A",#"Z",31),
(#"_",#"_",31),
(#"a",#"c",31),
(#"e",#"z",31),
(#"d",#"d",33)], [7]), ([(#"\t",#"\t",34),
(#" ",#" ",34),
(#",",#",",35),
(#"-",#"-",31),
(#"0",#"9",31),
(#"A",#"Z",31),
(#"_",#"_",31),
(#"a",#"z",31)], [7]), ([(#"\t",#"\t",34),
(#" ",#" ",34),
(#"0",#"0",36),
(#"1",#"2",37),
(#"3",#"3",38),
(#"4",#"9",39),
(#"A",#"A",40),
(#"D",#"D",41),
(#"F",#"F",42),
(#"J",#"J",43),
(#"M",#"M",44),
(#"N",#"N",45),
(#"O",#"O",46),
(#"S",#"S",47),
(#"a",#"a",48),
(#"d",#"d",49),
(#"f",#"f",50),
(#"j",#"j",51),
(#"m",#"m",52),
(#"n",#"n",53),
(#"o",#"o",54),
(#"s",#"s",55)], []), ([(#"\t",#"\t",34),
(#" ",#" ",34)], []), ([(#"1",#"9",39)], []), ([(#"\t",#"\t",109),
(#" ",#" ",109),
(#"0",#"9",39)], []), ([(#"\t",#"\t",109),
(#" ",#" ",109),
(#"0",#"1",39)], []), ([(#"\t",#"\t",109),
(#" ",#" ",109)], []), ([(#"p",#"p",103),
(#"u",#"u",104)], []), ([(#"e",#"e",102)], []), ([(#"e",#"e",99)], []), ([(#"a",#"a",91),
(#"u",#"u",92)], []), ([(#"a",#"a",88)], []), ([(#"o",#"o",86)], []), ([(#"c",#"c",84)], []), ([(#"e",#"e",78)], []), ([(#"p",#"p",76),
(#"u",#"u",77)], []), ([(#"e",#"e",75)], []), ([(#"e",#"e",74)], []), ([(#"a",#"a",72),
(#"u",#"u",73)], []), ([(#"a",#"a",71)], []), ([(#"o",#"o",70)], []), ([(#"c",#"c",69)], []), ([(#"e",#"e",56)], []), ([(#"p",#"p",57)], []), ([(#"\t",#"\t",58),
(#" ",#" ",58)], []), ([(#"\t",#"\t",58),
(#" ",#" ",58),
(#"0",#"0",59),
(#"1",#"2",60),
(#"3",#"3",61),
(#"4",#"9",62)], []), ([(#"1",#"9",62)], []), ([(#",",#",",63),
(#"0",#"9",62)], [2]), ([(#",",#",",63),
(#"0",#"1",62)], [2]), ([(#",",#",",63)], [2]), ([(#"\t",#"\t",64),
(#" ",#" ",64)], []), ([(#"\t",#"\t",64),
(#" ",#" ",64),
(#"0",#"2",65)], []), ([(#"0",#"9",66)], []), ([(#"0",#"9",67)], []), ([(#"0",#"9",68)], []), ([], [2]), ([(#"t",#"t",57)], []), ([(#"v",#"v",57)], []), ([(#"r",#"r",57),
(#"y",#"y",57)], []), ([(#"n",#"n",57)], []), ([(#"l",#"l",57),
(#"n",#"n",57)], []), ([(#"b",#"b",57)], []), ([(#"c",#"c",57)], []), ([(#"r",#"r",57)], []), ([(#"g",#"g",57)], []), ([(#"p",#"p",79)], []), ([(#"\t",#"\t",58),
(#" ",#" ",58),
(#"t",#"t",80)], []), ([(#"e",#"e",81)], []), ([(#"m",#"m",82)], []), ([(#"b",#"b",83)], []), ([(#"e",#"e",76)], []), ([(#"t",#"t",85)], []), ([(#"\t",#"\t",58),
(#" ",#" ",58),
(#"o",#"o",82)], []), ([(#"v",#"v",87)], []), ([(#"\t",#"\t",58),
(#" ",#" ",58),
(#"e",#"e",81)], []), ([(#"r",#"r",89),
(#"y",#"y",57)], []), ([(#"\t",#"\t",58),
(#" ",#" ",58),
(#"c",#"c",90)], []), ([(#"h",#"h",57)], []), ([(#"n",#"n",95)], []), ([(#"l",#"l",93),
(#"n",#"n",94)], []), ([(#"\t",#"\t",58),
(#" ",#" ",58),
(#"y",#"y",57)], []), ([(#"\t",#"\t",58),
(#" ",#" ",58),
(#"e",#"e",57)], []), ([(#"\t",#"\t",58),
(#" ",#" ",58),
(#"u",#"u",96)], []), ([(#"a",#"a",97)], []), ([(#"r",#"r",98)], []), ([(#"y",#"y",57)], []), ([(#"b",#"b",100)], []), ([(#"\t",#"\t",58),
(#" ",#" ",58),
(#"r",#"r",101)], []), ([(#"u",#"u",96)], []), ([(#"c",#"c",87)], []), ([(#"r",#"r",107)], []), ([(#"g",#"g",105)], []), ([(#"\t",#"\t",58),
(#" ",#" ",58),
(#"u",#"u",106)], []), ([(#"s",#"s",69)], []), ([(#"\t",#"\t",58),
(#" ",#" ",58),
(#"i",#"i",108)], []), ([(#"l",#"l",57)], []), ([(#"\t",#"\t",109),
(#" ",#" ",109),
(#"A",#"A",110),
(#"D",#"D",111),
(#"F",#"F",112),
(#"J",#"J",113),
(#"M",#"M",114),
(#"N",#"N",115),
(#"O",#"O",116),
(#"S",#"S",117),
(#"a",#"a",118),
(#"d",#"d",119),
(#"f",#"f",120),
(#"j",#"j",121),
(#"m",#"m",122),
(#"n",#"n",123),
(#"o",#"o",124),
(#"s",#"s",125)], []), ([(#"p",#"p",161),
(#"u",#"u",162)], []), ([(#"e",#"e",160)], []), ([(#"e",#"e",157)], []), ([(#"a",#"a",149),
(#"u",#"u",150)], []), ([(#"a",#"a",146)], []), ([(#"o",#"o",144)], []), ([(#"c",#"c",142)], []), ([(#"e",#"e",136)], []), ([(#"p",#"p",134),
(#"u",#"u",135)], []), ([(#"e",#"e",133)], []), ([(#"e",#"e",132)], []), ([(#"a",#"a",130),
(#"u",#"u",131)], []), ([(#"a",#"a",129)], []), ([(#"o",#"o",128)], []), ([(#"c",#"c",127)], []), ([(#"e",#"e",126)], []), ([(#"p",#"p",62)], []), ([(#"t",#"t",62)], []), ([(#"v",#"v",62)], []), ([(#"r",#"r",62),
(#"y",#"y",62)], []), ([(#"n",#"n",62)], []), ([(#"l",#"l",62),
(#"n",#"n",62)], []), ([(#"b",#"b",62)], []), ([(#"c",#"c",62)], []), ([(#"r",#"r",62)], []), ([(#"g",#"g",62)], []), ([(#"p",#"p",137)], []), ([(#",",#",",63),
(#"t",#"t",138)], [2]), ([(#"e",#"e",139)], []), ([(#"m",#"m",140)], []), ([(#"b",#"b",141)], []), ([(#"e",#"e",134)], []), ([(#"t",#"t",143)], []), ([(#",",#",",63),
(#"o",#"o",140)], [2]), ([(#"v",#"v",145)], []), ([(#",",#",",63),
(#"e",#"e",139)], [2]), ([(#"r",#"r",147),
(#"y",#"y",62)], []), ([(#",",#",",63),
(#"c",#"c",148)], [2]), ([(#"h",#"h",62)], []), ([(#"n",#"n",153)], []), ([(#"l",#"l",151),
(#"n",#"n",152)], []), ([(#",",#",",63),
(#"y",#"y",62)], [2]), ([(#",",#",",63),
(#"e",#"e",62)], [2]), ([(#",",#",",63),
(#"u",#"u",154)], [2]), ([(#"a",#"a",155)], []), ([(#"r",#"r",156)], []), ([(#"y",#"y",62)], []), ([(#"b",#"b",158)], []), ([(#",",#",",63),
(#"r",#"r",159)], [2]), ([(#"u",#"u",154)], []), ([(#"c",#"c",145)], []), ([(#"r",#"r",165)], []), ([(#"g",#"g",163)], []), ([(#",",#",",63),
(#"u",#"u",164)], [2]), ([(#"s",#"s",127)], []), ([(#",",#",",63),
(#"i",#"i",166)], [2]), ([(#"l",#"l",62)], []), ([(#"-",#"-",31),
(#"0",#"9",31),
(#"A",#"Z",31),
(#"_",#"_",31),
(#"a",#"t",31),
(#"v",#"z",31),
(#"u",#"u",33)], [7]), ([(#"-",#"-",31),
(#"0",#"9",31),
(#"A",#"Z",31),
(#"_",#"_",31),
(#"a",#"d",31),
(#"f",#"z",31),
(#"e",#"e",33)], [7]), ([(#"-",#"-",31),
(#"0",#"9",31),
(#"A",#"Z",31),
(#"_",#"_",31),
(#"a",#"s",31),
(#"u",#"z",31),
(#"t",#"t",33)], [7]), ([(#"-",#"-",31),
(#"0",#"9",31),
(#"A",#"Z",31),
(#"_",#"_",31),
(#"a",#"o",31),
(#"q",#"z",31),
(#"p",#"p",172)], [7]), ([(#"-",#"-",31),
(#"0",#"9",31),
(#"A",#"Z",31),
(#"_",#"_",31),
(#"a",#"m",31),
(#"o",#"z",31),
(#"n",#"n",33)], [7]), ([(#"\t",#"\t",58),
(#" ",#" ",58),
(#"-",#"-",173),
(#".",#".",174),
(#"/",#"/",175),
(#"0",#"9",31),
(#"A",#"Z",31),
(#"_",#"_",31),
(#"a",#"z",31)], [7]), ([(#"-",#"-",31),
(#"A",#"Z",31),
(#"_",#"_",31),
(#"a",#"z",31),
(#"0",#"0",185),
(#"1",#"2",186),
(#"3",#"3",187),
(#"4",#"9",188)], [7]), ([(#"0",#"0",181),
(#"1",#"2",182),
(#"3",#"3",183),
(#"4",#"9",184)], []), ([(#"0",#"0",176),
(#"1",#"2",177),
(#"3",#"3",178),
(#"4",#"9",179)], []), ([(#"1",#"9",179)], []), ([(#"/",#"/",180),
(#"0",#"9",179)], []), ([(#"/",#"/",180),
(#"0",#"1",179)], []), ([(#"/",#"/",180)], []), ([(#"0",#"2",65)], []), ([(#"1",#"9",184)], []), ([(#".",#".",180),
(#"0",#"9",184)], []), ([(#".",#".",180),
(#"0",#"1",184)], []), ([(#".",#".",180)], []), ([(#"-",#"-",31),
(#"0",#"0",31),
(#"A",#"Z",31),
(#"_",#"_",31),
(#"a",#"z",31),
(#"1",#"9",188)], [7]), ([(#"-",#"-",189),
(#"0",#"9",188),
(#"A",#"Z",31),
(#"_",#"_",31),
(#"a",#"z",31)], [7]), ([(#"-",#"-",189),
(#"0",#"1",188),
(#"2",#"9",31),
(#"A",#"Z",31),
(#"_",#"_",31),
(#"a",#"z",31)], [7]), ([(#"-",#"-",189),
(#"0",#"9",31),
(#"A",#"Z",31),
(#"_",#"_",31),
(#"a",#"z",31)], [7]), ([(#"-",#"-",31),
(#"3",#"9",31),
(#"A",#"Z",31),
(#"_",#"_",31),
(#"a",#"z",31),
(#"0",#"2",190)], [7]), ([(#"-",#"-",31),
(#"A",#"Z",31),
(#"_",#"_",31),
(#"a",#"z",31),
(#"0",#"9",191)], [7]), ([(#"-",#"-",31),
(#"A",#"Z",31),
(#"_",#"_",31),
(#"a",#"z",31),
(#"0",#"9",192)], [7]), ([(#"-",#"-",31),
(#"A",#"Z",31),
(#"_",#"_",31),
(#"a",#"z",31),
(#"0",#"9",193)], [7]), ([(#"-",#"-",31),
(#"0",#"9",31),
(#"A",#"Z",31),
(#"_",#"_",31),
(#"a",#"z",31)], [2, 7]), ([(#"-",#"-",31),
(#"0",#"9",31),
(#"A",#"Z",31),
(#"_",#"_",31),
(#"a",#"s",31),
(#"u",#"z",31),
(#"t",#"t",172)], [7]), ([(#"-",#"-",31),
(#"0",#"9",31),
(#"A",#"Z",31),
(#"_",#"_",31),
(#"a",#"u",31),
(#"w",#"z",31),
(#"v",#"v",172)], [7]), ([(#"-",#"-",31),
(#"0",#"9",31),
(#"A",#"Z",31),
(#"_",#"_",31),
(#"a",#"q",31),
(#"s",#"x",31),
(#"z",#"z",31),
(#"r",#"r",172),
(#"y",#"y",172)], [7]), ([(#"-",#"-",31),
(#"0",#"9",31),
(#"A",#"Z",31),
(#"_",#"_",31),
(#"a",#"m",31),
(#"o",#"z",31),
(#"n",#"n",172)], [7]), ([(#"-",#"-",31),
(#"0",#"9",31),
(#"A",#"Z",31),
(#"_",#"_",31),
(#"a",#"k",31),
(#"m",#"m",31),
(#"o",#"z",31),
(#"l",#"l",172),
(#"n",#"n",172)], [7]), ([(#"-",#"-",31),
(#"0",#"9",31),
(#"A",#"Z",31),
(#"_",#"_",31),
(#"a",#"a",31),
(#"c",#"z",31),
(#"b",#"b",172)], [7]), ([(#"-",#"-",31),
(#"0",#"9",31),
(#"A",#"Z",31),
(#"_",#"_",31),
(#"a",#"h",31),
(#"j",#"z",31),
(#"i",#"i",33)], [7]), ([(#"-",#"-",31),
(#"0",#"9",31),
(#"A",#"Z",31),
(#"_",#"_",31),
(#"a",#"b",31),
(#"d",#"z",31),
(#"c",#"c",172)], [7]), ([(#"-",#"-",31),
(#"0",#"9",31),
(#"A",#"Z",31),
(#"_",#"_",31),
(#"a",#"q",31),
(#"s",#"z",31),
(#"r",#"r",172)], [7]), ([(#"-",#"-",31),
(#"0",#"9",31),
(#"A",#"Z",31),
(#"_",#"_",31),
(#"a",#"f",31),
(#"h",#"z",31),
(#"g",#"g",172)], [7]), ([(#"-",#"-",31),
(#"0",#"9",31),
(#"A",#"Z",31),
(#"_",#"_",31),
(#"a",#"c",31),
(#"e",#"z",31),
(#"d",#"d",205)], [7]), ([(#"\t",#"\t",34),
(#" ",#" ",34),
(#",",#",",35),
(#"-",#"-",31),
(#"0",#"9",31),
(#"A",#"Z",31),
(#"_",#"_",31),
(#"a",#"m",31),
(#"o",#"z",31),
(#"n",#"n",206)], [7]), ([(#"-",#"-",31),
(#"0",#"9",31),
(#"A",#"Z",31),
(#"_",#"_",31),
(#"a",#"d",31),
(#"f",#"z",31),
(#"e",#"e",207)], [7]), ([(#"-",#"-",31),
(#"0",#"9",31),
(#"A",#"Z",31),
(#"_",#"_",31),
(#"a",#"r",31),
(#"t",#"z",31),
(#"s",#"s",208)], [7]), ([(#"-",#"-",31),
(#"0",#"9",31),
(#"A",#"Z",31),
(#"_",#"_",31),
(#"a",#"c",31),
(#"e",#"z",31),
(#"d",#"d",209)], [7]), ([(#"-",#"-",31),
(#"0",#"9",31),
(#"A",#"Z",31),
(#"_",#"_",31),
(#"b",#"z",31),
(#"a",#"a",210)], [7]), ([(#"-",#"-",31),
(#"0",#"9",31),
(#"A",#"Z",31),
(#"_",#"_",31),
(#"a",#"x",31),
(#"z",#"z",31),
(#"y",#"y",33)], [7]), ([(#"-",#"-",31),
(#"0",#"9",31),
(#"A",#"Z",31),
(#"_",#"_",31),
(#"a",#"t",31),
(#"v",#"z",31),
(#"u",#"u",214)], [7]), ([(#"-",#"-",31),
(#"0",#"9",31),
(#"A",#"Z",31),
(#"_",#"_",31),
(#"a",#"d",31),
(#"f",#"z",31),
(#"e",#"e",213)], [7]), ([(#"\t",#"\t",34),
(#" ",#" ",34),
(#",",#",",35),
(#"-",#"-",31),
(#"0",#"9",31),
(#"A",#"Z",31),
(#"_",#"_",31),
(#"a",#"r",31),
(#"t",#"z",31),
(#"s",#"s",208)], [7]), ([(#"\t",#"\t",34),
(#" ",#" ",34),
(#",",#",",35),
(#"-",#"-",31),
(#"0",#"9",31),
(#"A",#"Z",31),
(#"_",#"_",31),
(#"a",#"q",31),
(#"s",#"z",31),
(#"r",#"r",207)], [7]), ([(#"-",#"-",31),
(#"0",#"9",31),
(#"A",#"Z",31),
(#"_",#"_",31),
(#"a",#"s",31),
(#"u",#"z",31),
(#"t",#"t",224)], [7]), ([(#"-",#"-",31),
(#"0",#"9",31),
(#"A",#"Z",31),
(#"_",#"_",31),
(#"a",#"o",31),
(#"q",#"z",31),
(#"p",#"p",219)], [7]), ([(#"-",#"-",31),
(#"0",#"9",31),
(#"A",#"Z",31),
(#"_",#"_",31),
(#"a",#"m",31),
(#"o",#"z",31),
(#"n",#"n",218)], [7]), ([(#"\t",#"\t",34),
(#" ",#" ",34),
(#",",#",",35),
(#"-",#"-",31),
(#"0",#"9",31),
(#"A",#"Z",31),
(#"_",#"_",31),
(#"a",#"c",31),
(#"e",#"z",31),
(#"d",#"d",209)], [7]), ([(#"\t",#"\t",58),
(#" ",#" ",58),
(#"-",#"-",173),
(#".",#".",174),
(#"/",#"/",175),
(#"0",#"9",31),
(#"A",#"Z",31),
(#"_",#"_",31),
(#"a",#"s",31),
(#"u",#"z",31),
(#"t",#"t",220)], [7]), ([(#"-",#"-",31),
(#"0",#"9",31),
(#"A",#"Z",31),
(#"_",#"_",31),
(#"a",#"d",31),
(#"f",#"z",31),
(#"e",#"e",221)], [7]), ([(#"-",#"-",31),
(#"0",#"9",31),
(#"A",#"Z",31),
(#"_",#"_",31),
(#"a",#"l",31),
(#"n",#"z",31),
(#"m",#"m",222)], [7]), ([(#"-",#"-",31),
(#"0",#"9",31),
(#"A",#"Z",31),
(#"_",#"_",31),
(#"a",#"a",31),
(#"c",#"z",31),
(#"b",#"b",223)], [7]), ([(#"-",#"-",31),
(#"0",#"9",31),
(#"A",#"Z",31),
(#"_",#"_",31),
(#"a",#"d",31),
(#"f",#"z",31),
(#"e",#"e",202)], [7]), ([(#"\t",#"\t",34),
(#" ",#" ",34),
(#",",#",",35),
(#"-",#"-",31),
(#"0",#"9",31),
(#"A",#"Z",31),
(#"_",#"_",31),
(#"a",#"t",31),
(#"v",#"z",31),
(#"u",#"u",225)], [7]), ([(#"-",#"-",31),
(#"0",#"9",31),
(#"A",#"Z",31),
(#"_",#"_",31),
(#"a",#"q",31),
(#"s",#"z",31),
(#"r",#"r",208)], [7]), ([(#"-",#"-",31),
(#"0",#"9",31),
(#"A",#"Z",31),
(#"_",#"_",31),
(#"a",#"s",31),
(#"u",#"z",31),
(#"t",#"t",227)], [7]), ([(#"\t",#"\t",58),
(#" ",#" ",58),
(#"-",#"-",173),
(#".",#".",174),
(#"/",#"/",175),
(#"0",#"9",31),
(#"A",#"Z",31),
(#"_",#"_",31),
(#"a",#"n",31),
(#"p",#"z",31),
(#"o",#"o",222)], [7]), ([(#"-",#"-",31),
(#"0",#"9",31),
(#"A",#"Z",31),
(#"_",#"_",31),
(#"a",#"u",31),
(#"w",#"z",31),
(#"v",#"v",229)], [7]), ([(#"\t",#"\t",58),
(#" ",#" ",58),
(#"-",#"-",173),
(#".",#".",174),
(#"/",#"/",175),
(#"0",#"9",31),
(#"A",#"Z",31),
(#"_",#"_",31),
(#"a",#"d",31),
(#"f",#"z",31),
(#"e",#"e",221)], [7]), ([(#"-",#"-",31),
(#"0",#"9",31),
(#"A",#"Z",31),
(#"_",#"_",31),
(#"a",#"q",31),
(#"s",#"x",31),
(#"z",#"z",31),
(#"r",#"r",231),
(#"y",#"y",172)], [7]), ([(#"\t",#"\t",58),
(#" ",#" ",58),
(#"-",#"-",173),
(#".",#".",174),
(#"/",#"/",175),
(#"0",#"9",31),
(#"A",#"Z",31),
(#"_",#"_",31),
(#"a",#"b",31),
(#"d",#"z",31),
(#"c",#"c",232)], [7]), ([(#"-",#"-",31),
(#"0",#"9",31),
(#"A",#"Z",31),
(#"_",#"_",31),
(#"a",#"g",31),
(#"i",#"z",31),
(#"h",#"h",172)], [7]), ([(#"-",#"-",31),
(#"0",#"9",31),
(#"A",#"Z",31),
(#"_",#"_",31),
(#"a",#"m",31),
(#"o",#"z",31),
(#"n",#"n",237)], [7]), ([(#"-",#"-",31),
(#"0",#"9",31),
(#"A",#"Z",31),
(#"_",#"_",31),
(#"a",#"k",31),
(#"m",#"m",31),
(#"o",#"z",31),
(#"l",#"l",235),
(#"n",#"n",236)], [7]), ([(#"\t",#"\t",58),
(#" ",#" ",58),
(#"-",#"-",173),
(#".",#".",174),
(#"/",#"/",175),
(#"0",#"9",31),
(#"A",#"Z",31),
(#"_",#"_",31),
(#"a",#"x",31),
(#"z",#"z",31),
(#"y",#"y",172)], [7]), ([(#"\t",#"\t",58),
(#" ",#" ",58),
(#"-",#"-",173),
(#".",#".",174),
(#"/",#"/",175),
(#"0",#"9",31),
(#"A",#"Z",31),
(#"_",#"_",31),
(#"a",#"d",31),
(#"f",#"z",31),
(#"e",#"e",172)], [7]), ([(#"\t",#"\t",58),
(#" ",#" ",58),
(#"-",#"-",173),
(#".",#".",174),
(#"/",#"/",175),
(#"0",#"9",31),
(#"A",#"Z",31),
(#"_",#"_",31),
(#"a",#"t",31),
(#"v",#"z",31),
(#"u",#"u",238)], [7]), ([(#"-",#"-",31),
(#"0",#"9",31),
(#"A",#"Z",31),
(#"_",#"_",31),
(#"b",#"z",31),
(#"a",#"a",239)], [7]), ([(#"-",#"-",31),
(#"0",#"9",31),
(#"A",#"Z",31),
(#"_",#"_",31),
(#"a",#"q",31),
(#"s",#"z",31),
(#"r",#"r",240)], [7]), ([(#"-",#"-",31),
(#"0",#"9",31),
(#"A",#"Z",31),
(#"_",#"_",31),
(#"a",#"x",31),
(#"z",#"z",31),
(#"y",#"y",172)], [7]), ([(#"-",#"-",31),
(#"0",#"9",31),
(#"A",#"Z",31),
(#"_",#"_",31),
(#"a",#"a",31),
(#"c",#"z",31),
(#"b",#"b",243)], [7]), ([(#"-",#"-",31),
(#"0",#"9",31),
(#"A",#"Z",31),
(#"_",#"_",31),
(#"a",#"h",31),
(#"j",#"z",31),
(#"i",#"i",218)], [7]), ([(#"\t",#"\t",58),
(#" ",#" ",58),
(#"-",#"-",173),
(#".",#".",174),
(#"/",#"/",175),
(#"0",#"9",31),
(#"A",#"Z",31),
(#"_",#"_",31),
(#"a",#"q",31),
(#"s",#"z",31),
(#"r",#"r",244)], [7]), ([(#"-",#"-",31),
(#"0",#"9",31),
(#"A",#"Z",31),
(#"_",#"_",31),
(#"a",#"t",31),
(#"v",#"z",31),
(#"u",#"u",238)], [7]), ([(#"-",#"-",31),
(#"0",#"9",31),
(#"A",#"Z",31),
(#"_",#"_",31),
(#"a",#"b",31),
(#"d",#"z",31),
(#"c",#"c",229)], [7]), ([(#"-",#"-",31),
(#"0",#"9",31),
(#"A",#"Z",31),
(#"_",#"_",31),
(#"a",#"q",31),
(#"s",#"z",31),
(#"r",#"r",250)], [7]), ([(#"-",#"-",31),
(#"0",#"9",31),
(#"A",#"Z",31),
(#"_",#"_",31),
(#"a",#"f",31),
(#"h",#"z",31),
(#"g",#"g",248)], [7]), ([(#"\t",#"\t",58),
(#" ",#" ",58),
(#"-",#"-",173),
(#".",#".",174),
(#"/",#"/",175),
(#"0",#"9",31),
(#"A",#"Z",31),
(#"_",#"_",31),
(#"a",#"t",31),
(#"v",#"z",31),
(#"u",#"u",249)], [7]), ([(#"-",#"-",31),
(#"0",#"9",31),
(#"A",#"Z",31),
(#"_",#"_",31),
(#"a",#"r",31),
(#"t",#"z",31),
(#"s",#"s",194)], [7]), ([(#"\t",#"\t",58),
(#" ",#" ",58),
(#"-",#"-",173),
(#".",#".",174),
(#"/",#"/",175),
(#"0",#"9",31),
(#"A",#"Z",31),
(#"_",#"_",31),
(#"a",#"h",31),
(#"j",#"z",31),
(#"i",#"i",251)], [7]), ([(#"-",#"-",31),
(#"0",#"9",31),
(#"A",#"Z",31),
(#"_",#"_",31),
(#"a",#"k",31),
(#"m",#"z",31),
(#"l",#"l",172)], [7]), ([(#"\^@",#"=",255),
(#"?",#"\255",255)], []), ([(#">",#">",254),
(#"A",#"Z",253),
(#"a",#"z",253)], []), ([], [3]), ([(#"\^@",#"=",255),
(#"?",#"\255",255),
(#">",#">",256)], []), ([], [4]), ([(#"0",#"0",418),
(#"1",#"1",419),
(#"2",#"2",420),
(#"3",#"3",421),
(#"4",#"9",422),
(#"A",#"A",423),
(#"D",#"D",424),
(#"F",#"F",425),
(#"J",#"J",426),
(#"M",#"M",427),
(#"N",#"N",428),
(#"O",#"O",429),
(#"S",#"S",430),
(#"a",#"a",431),
(#"d",#"d",432),
(#"f",#"f",433),
(#"j",#"j",434),
(#"m",#"m",435),
(#"n",#"n",436),
(#"o",#"o",437),
(#"s",#"s",438)], []), ([(#"0",#"0",351),
(#"1",#"1",352),
(#"2",#"2",353),
(#"3",#"3",354),
(#"4",#"9",355),
(#"A",#"A",356),
(#"D",#"D",357),
(#"F",#"F",358),
(#"J",#"J",359),
(#"M",#"M",360),
(#"N",#"N",361),
(#"O",#"O",362),
(#"S",#"S",363),
(#"a",#"a",364),
(#"d",#"d",365),
(#"f",#"f",366),
(#"j",#"j",367),
(#"m",#"m",368),
(#"n",#"n",369),
(#"o",#"o",370),
(#"s",#"s",371)], []), ([(#"0",#"0",176),
(#"1",#"1",291),
(#"2",#"2",292),
(#"3",#"3",293),
(#"4",#"9",179),
(#"A",#"A",294),
(#"D",#"D",295),
(#"F",#"F",296),
(#"J",#"J",297),
(#"M",#"M",298),
(#"N",#"N",299),
(#"O",#"O",300),
(#"S",#"S",301),
(#"a",#"a",302),
(#"d",#"d",303),
(#"f",#"f",304),
(#"j",#"j",305),
(#"m",#"m",306),
(#"n",#"n",307),
(#"o",#"o",308),
(#"s",#"s",309)], []), ([(#".",#".",261),
(#"0",#"9",262),
(#":",#":",263)], [6]), ([(#"0",#"9",280)], []), ([(#".",#".",261),
(#"0",#"9",279)], [6]), ([(#"0",#"9",264)], []), ([(#"0",#"9",265)], []), ([(#":",#":",266)], []), ([(#"0",#"9",267)], []), ([(#"0",#"9",268)], []), ([(#"\t",#"\t",269),
(#" ",#" ",270),
(#"A",#"A",271),
(#"P",#"P",271),
(#"a",#"a",272),
(#"p",#"p",272)], [0]), ([(#"\t",#"\t",269),
(#" ",#" ",269),
(#"+",#"+",274),
(#"-",#"-",274)], []), ([(#"\t",#"\t",269),
(#" ",#" ",270),
(#"+",#"+",274),
(#"-",#"-",274),
(#"A",#"A",271),
(#"P",#"P",271),
(#"a",#"a",272),
(#"p",#"p",272)], []), ([(#"M",#"M",273)], []), ([(#"m",#"m",273)], []), ([(#"\t",#"\t",269),
(#" ",#" ",269)], [0]), ([(#"0",#"1",275)], []), ([(#"0",#"9",276)], []), ([(#"0",#"0",277)], []), ([(#"0",#"0",278)], []), ([], [0]), ([(#"0",#"9",279)], [6]), ([(#".",#".",281),
(#"0",#"9",282)], []), ([(#"0",#"9",284)], []), ([(#".",#".",281),
(#"0",#"9",283)], []), ([(#".",#".",281)], []), ([(#".",#".",285),
(#"0",#"9",286)], []), ([(#"0",#"9",288)], []), ([(#".",#".",285),
(#"0",#"9",287)], []), ([(#".",#".",285)], []), ([(#"0",#"9",289)], [1]), ([(#"0",#"9",290)], [1]), ([], [1]), ([(#"/",#"/",180),
(#"0",#"9",179)], []), ([(#"/",#"/",180),
(#"0",#"9",179)], []), ([(#"/",#"/",180),
(#"0",#"1",179)], []), ([(#"p",#"p",345),
(#"u",#"u",346)], []), ([(#"e",#"e",344)], []), ([(#"e",#"e",341)], []), ([(#"a",#"a",333),
(#"u",#"u",334)], []), ([(#"a",#"a",330)], []), ([(#"o",#"o",328)], []), ([(#"c",#"c",326)], []), ([(#"e",#"e",320)], []), ([(#"p",#"p",318),
(#"u",#"u",319)], []), ([(#"e",#"e",317)], []), ([(#"e",#"e",316)], []), ([(#"a",#"a",314),
(#"u",#"u",315)], []), ([(#"a",#"a",313)], []), ([(#"o",#"o",312)], []), ([(#"c",#"c",311)], []), ([(#"e",#"e",310)], []), ([(#"p",#"p",179)], []), ([(#"t",#"t",179)], []), ([(#"v",#"v",179)], []), ([(#"r",#"r",179),
(#"y",#"y",179)], []), ([(#"n",#"n",179)], []), ([(#"l",#"l",179),
(#"n",#"n",179)], []), ([(#"b",#"b",179)], []), ([(#"c",#"c",179)], []), ([(#"r",#"r",179)], []), ([(#"g",#"g",179)], []), ([(#"p",#"p",321)], []), ([(#"/",#"/",180),
(#"t",#"t",322)], []), ([(#"e",#"e",323)], []), ([(#"m",#"m",324)], []), ([(#"b",#"b",325)], []), ([(#"e",#"e",318)], []), ([(#"t",#"t",327)], []), ([(#"/",#"/",180),
(#"o",#"o",324)], []), ([(#"v",#"v",329)], []), ([(#"/",#"/",180),
(#"e",#"e",323)], []), ([(#"r",#"r",331),
(#"y",#"y",179)], []), ([(#"/",#"/",180),
(#"c",#"c",332)], []), ([(#"h",#"h",179)], []), ([(#"n",#"n",337)], []), ([(#"l",#"l",335),
(#"n",#"n",336)], []), ([(#"/",#"/",180),
(#"y",#"y",179)], []), ([(#"/",#"/",180),
(#"e",#"e",179)], []), ([(#"/",#"/",180),
(#"u",#"u",338)], []), ([(#"a",#"a",339)], []), ([(#"r",#"r",340)], []), ([(#"y",#"y",179)], []), ([(#"b",#"b",342)], []), ([(#"/",#"/",180),
(#"r",#"r",343)], []), ([(#"u",#"u",338)], []), ([(#"c",#"c",329)], []), ([(#"r",#"r",349)], []), ([(#"g",#"g",347)], []), ([(#"/",#"/",180),
(#"u",#"u",348)], []), ([(#"s",#"s",311)], []), ([(#"/",#"/",180),
(#"i",#"i",350)], []), ([(#"l",#"l",179)], []), ([(#".",#".",281),
(#"0",#"0",282),
(#"1",#"9",417)], []), ([(#".",#".",413),
(#"0",#"9",417)], []), ([(#".",#".",413),
(#"0",#"9",417)], []), ([(#".",#".",413),
(#"0",#"1",417),
(#"2",#"9",282)], []), ([(#".",#".",413),
(#"0",#"9",282)], []), ([(#"p",#"p",407),
(#"u",#"u",408)], []), ([(#"e",#"e",406)], []), ([(#"e",#"e",403)], []), ([(#"a",#"a",395),
(#"u",#"u",396)], []), ([(#"a",#"a",392)], []), ([(#"o",#"o",390)], []), ([(#"c",#"c",388)], []), ([(#"e",#"e",382)], []), ([(#"p",#"p",380),
(#"u",#"u",381)], []), ([(#"e",#"e",379)], []), ([(#"e",#"e",378)], []), ([(#"a",#"a",376),
(#"u",#"u",377)], []), ([(#"a",#"a",375)], []), ([(#"o",#"o",374)], []), ([(#"c",#"c",373)], []), ([(#"e",#"e",372)], []), ([(#"p",#"p",184)], []), ([(#"t",#"t",184)], []), ([(#"v",#"v",184)], []), ([(#"r",#"r",184),
(#"y",#"y",184)], []), ([(#"n",#"n",184)], []), ([(#"l",#"l",184),
(#"n",#"n",184)], []), ([(#"b",#"b",184)], []), ([(#"c",#"c",184)], []), ([(#"r",#"r",184)], []), ([(#"g",#"g",184)], []), ([(#"p",#"p",383)], []), ([(#".",#".",180),
(#"t",#"t",384)], []), ([(#"e",#"e",385)], []), ([(#"m",#"m",386)], []), ([(#"b",#"b",387)], []), ([(#"e",#"e",380)], []), ([(#"t",#"t",389)], []), ([(#".",#".",180),
(#"o",#"o",386)], []), ([(#"v",#"v",391)], []), ([(#".",#".",180),
(#"e",#"e",385)], []), ([(#"r",#"r",393),
(#"y",#"y",184)], []), ([(#".",#".",180),
(#"c",#"c",394)], []), ([(#"h",#"h",184)], []), ([(#"n",#"n",399)], []), ([(#"l",#"l",397),
(#"n",#"n",398)], []), ([(#".",#".",180),
(#"y",#"y",184)], []), ([(#".",#".",180),
(#"e",#"e",184)], []), ([(#".",#".",180),
(#"u",#"u",400)], []), ([(#"a",#"a",401)], []), ([(#"r",#"r",402)], []), ([(#"y",#"y",184)], []), ([(#"b",#"b",404)], []), ([(#".",#".",180),
(#"r",#"r",405)], []), ([(#"u",#"u",400)], []), ([(#"c",#"c",391)], []), ([(#"r",#"r",411)], []), ([(#"g",#"g",409)], []), ([(#".",#".",180),
(#"u",#"u",410)], []), ([(#"s",#"s",373)], []), ([(#".",#".",180),
(#"i",#"i",412)], []), ([(#"l",#"l",184)], []), ([(#"0",#"2",414),
(#"3",#"9",284)], []), ([(#".",#".",285),
(#"0",#"9",415)], []), ([(#".",#".",285),
(#"0",#"9",416)], []), ([(#".",#".",285),
(#"0",#"9",68)], []), ([(#".",#".",413),
(#"0",#"9",283)], []), ([(#"1",#"9",422)], []), ([(#"-",#"-",180),
(#"0",#"9",422)], []), ([(#"-",#"-",180),
(#"0",#"9",422)], []), ([(#"-",#"-",180),
(#"0",#"1",422)], []), ([(#"-",#"-",180)], []), ([(#"p",#"p",474),
(#"u",#"u",475)], []), ([(#"e",#"e",473)], []), ([(#"e",#"e",470)], []), ([(#"a",#"a",462),
(#"u",#"u",463)], []), ([(#"a",#"a",459)], []), ([(#"o",#"o",457)], []), ([(#"c",#"c",455)], []), ([(#"e",#"e",449)], []), ([(#"p",#"p",447),
(#"u",#"u",448)], []), ([(#"e",#"e",446)], []), ([(#"e",#"e",445)], []), ([(#"a",#"a",443),
(#"u",#"u",444)], []), ([(#"a",#"a",442)], []), ([(#"o",#"o",441)], []), ([(#"c",#"c",440)], []), ([(#"e",#"e",439)], []), ([(#"p",#"p",422)], []), ([(#"t",#"t",422)], []), ([(#"v",#"v",422)], []), ([(#"r",#"r",422),
(#"y",#"y",422)], []), ([(#"n",#"n",422)], []), ([(#"l",#"l",422),
(#"n",#"n",422)], []), ([(#"b",#"b",422)], []), ([(#"c",#"c",422)], []), ([(#"r",#"r",422)], []), ([(#"g",#"g",422)], []), ([(#"p",#"p",450)], []), ([(#"-",#"-",180),
(#"t",#"t",451)], []), ([(#"e",#"e",452)], []), ([(#"m",#"m",453)], []), ([(#"b",#"b",454)], []), ([(#"e",#"e",447)], []), ([(#"t",#"t",456)], []), ([(#"-",#"-",180),
(#"o",#"o",453)], []), ([(#"v",#"v",458)], []), ([(#"-",#"-",180),
(#"e",#"e",452)], []), ([(#"r",#"r",460),
(#"y",#"y",422)], []), ([(#"-",#"-",180),
(#"c",#"c",461)], []), ([(#"h",#"h",422)], []), ([(#"n",#"n",466)], []), ([(#"l",#"l",464),
(#"n",#"n",465)], []), ([(#"-",#"-",180),
(#"y",#"y",422)], []), ([(#"-",#"-",180),
(#"e",#"e",422)], []), ([(#"-",#"-",180),
(#"u",#"u",467)], []), ([(#"a",#"a",468)], []), ([(#"r",#"r",469)], []), ([(#"y",#"y",422)], []), ([(#"b",#"b",471)], []), ([(#"-",#"-",180),
(#"r",#"r",472)], []), ([(#"u",#"u",467)], []), ([(#"c",#"c",458)], []), ([(#"r",#"r",478)], []), ([(#"g",#"g",476)], []), ([(#"-",#"-",180),
(#"u",#"u",477)], []), ([(#"s",#"s",440)], []), ([(#"-",#"-",180),
(#"i",#"i",479)], []), ([(#"l",#"l",422)], []), ([(#"\t",#"\t",109),
(#" ",#" ",109),
(#"-",#"-",481),
(#".",#".",482),
(#"/",#"/",483),
(#"0",#"9",262),
(#":",#":",263)], [6]), ([(#"0",#"0",418),
(#"1",#"1",486),
(#"2",#"9",422),
(#"A",#"A",423),
(#"D",#"D",424),
(#"F",#"F",425),
(#"J",#"J",426),
(#"M",#"M",427),
(#"N",#"N",428),
(#"O",#"O",429),
(#"S",#"S",430),
(#"a",#"a",431),
(#"d",#"d",432),
(#"f",#"f",433),
(#"j",#"j",434),
(#"m",#"m",435),
(#"n",#"n",436),
(#"o",#"o",437),
(#"s",#"s",438)], []), ([(#"0",#"0",351),
(#"1",#"1",485),
(#"2",#"9",355),
(#"A",#"A",356),
(#"D",#"D",357),
(#"F",#"F",358),
(#"J",#"J",359),
(#"M",#"M",360),
(#"N",#"N",361),
(#"O",#"O",362),
(#"S",#"S",363),
(#"a",#"a",364),
(#"d",#"d",365),
(#"f",#"f",366),
(#"j",#"j",367),
(#"m",#"m",368),
(#"n",#"n",369),
(#"o",#"o",370),
(#"s",#"s",371)], []), ([(#"0",#"0",176),
(#"1",#"1",484),
(#"2",#"9",179),
(#"A",#"A",294),
(#"D",#"D",295),
(#"F",#"F",296),
(#"J",#"J",297),
(#"M",#"M",298),
(#"N",#"N",299),
(#"O",#"O",300),
(#"S",#"S",301),
(#"a",#"a",302),
(#"d",#"d",303),
(#"f",#"f",304),
(#"j",#"j",305),
(#"m",#"m",306),
(#"n",#"n",307),
(#"o",#"o",308),
(#"s",#"s",309)], []), ([(#"/",#"/",180),
(#"0",#"2",179)], []), ([(#".",#".",413),
(#"0",#"2",417),
(#"3",#"9",282)], []), ([(#"-",#"-",180),
(#"0",#"2",422)], []), ([(#"\t",#"\t",109),
(#" ",#" ",109),
(#"-",#"-",481),
(#".",#".",482),
(#"/",#"/",483),
(#"0",#"9",488),
(#":",#":",263)], [6]), ([(#".",#".",261),
(#"0",#"9",489)], [6]), ([(#"-",#"-",490),
(#".",#".",491),
(#"/",#"/",492),
(#"0",#"9",279)], [6]), ([(#"0",#"0",617),
(#"1",#"1",618),
(#"2",#"9",619),
(#"A",#"A",620),
(#"D",#"D",621),
(#"F",#"F",622),
(#"J",#"J",623),
(#"M",#"M",624),
(#"N",#"N",625),
(#"O",#"O",626),
(#"S",#"S",627),
(#"a",#"a",628),
(#"d",#"d",629),
(#"f",#"f",630),
(#"j",#"j",631),
(#"m",#"m",632),
(#"n",#"n",633),
(#"o",#"o",634),
(#"s",#"s",635)], []), ([(#"0",#"0",557),
(#"1",#"1",558),
(#"2",#"9",559),
(#"A",#"A",560),
(#"D",#"D",561),
(#"F",#"F",562),
(#"J",#"J",563),
(#"M",#"M",564),
(#"N",#"N",565),
(#"O",#"O",566),
(#"S",#"S",567),
(#"a",#"a",568),
(#"d",#"d",569),
(#"f",#"f",570),
(#"j",#"j",571),
(#"m",#"m",572),
(#"n",#"n",573),
(#"o",#"o",574),
(#"s",#"s",575)], []), ([(#"0",#"0",493),
(#"1",#"1",494),
(#"2",#"9",495),
(#"A",#"A",496),
(#"D",#"D",497),
(#"F",#"F",498),
(#"J",#"J",499),
(#"M",#"M",500),
(#"N",#"N",501),
(#"O",#"O",502),
(#"S",#"S",503),
(#"a",#"a",504),
(#"d",#"d",505),
(#"f",#"f",506),
(#"j",#"j",507),
(#"m",#"m",508),
(#"n",#"n",509),
(#"o",#"o",510),
(#"s",#"s",511)], []), ([(#"1",#"9",495)], []), ([(#"/",#"/",524),
(#"0",#"2",495)], []), ([(#"/",#"/",524)], []), ([(#"p",#"p",551),
(#"u",#"u",552)], []), ([(#"e",#"e",550)], []), ([(#"e",#"e",547)], []), ([(#"a",#"a",539),
(#"u",#"u",540)], []), ([(#"a",#"a",536)], []), ([(#"o",#"o",534)], []), ([(#"c",#"c",532)], []), ([(#"e",#"e",522)], []), ([(#"p",#"p",520),
(#"u",#"u",521)], []), ([(#"e",#"e",519)], []), ([(#"e",#"e",518)], []), ([(#"a",#"a",516),
(#"u",#"u",517)], []), ([(#"a",#"a",515)], []), ([(#"o",#"o",514)], []), ([(#"c",#"c",513)], []), ([(#"e",#"e",512)], []), ([(#"p",#"p",495)], []), ([(#"t",#"t",495)], []), ([(#"v",#"v",495)], []), ([(#"r",#"r",495),
(#"y",#"y",495)], []), ([(#"n",#"n",495)], []), ([(#"l",#"l",495),
(#"n",#"n",495)], []), ([(#"b",#"b",495)], []), ([(#"c",#"c",495)], []), ([(#"r",#"r",495)], []), ([(#"g",#"g",495)], []), ([(#"p",#"p",523)], []), ([(#"/",#"/",524),
(#"t",#"t",525)], []), ([(#"0",#"0",529),
(#"1",#"2",530),
(#"3",#"3",531),
(#"4",#"9",68)], []), ([(#"e",#"e",526)], []), ([(#"m",#"m",527)], []), ([(#"b",#"b",528)], []), ([(#"e",#"e",520)], []), ([(#"1",#"9",68)], []), ([(#"0",#"9",68)], [2]), ([(#"0",#"1",68)], [2]), ([(#"t",#"t",533)], []), ([(#"/",#"/",524),
(#"o",#"o",527)], []), ([(#"v",#"v",535)], []), ([(#"/",#"/",524),
(#"e",#"e",526)], []), ([(#"r",#"r",537),
(#"y",#"y",495)], []), ([(#"/",#"/",524),
(#"c",#"c",538)], []), ([(#"h",#"h",495)], []), ([(#"n",#"n",543)], []), ([(#"l",#"l",541),
(#"n",#"n",542)], []), ([(#"/",#"/",524),
(#"y",#"y",495)], []), ([(#"/",#"/",524),
(#"e",#"e",495)], []), ([(#"/",#"/",524),
(#"u",#"u",544)], []), ([(#"a",#"a",545)], []), ([(#"r",#"r",546)], []), ([(#"y",#"y",495)], []), ([(#"b",#"b",548)], []), ([(#"/",#"/",524),
(#"r",#"r",549)], []), ([(#"u",#"u",544)], []), ([(#"c",#"c",535)], []), ([(#"r",#"r",555)], []), ([(#"g",#"g",553)], []), ([(#"/",#"/",524),
(#"u",#"u",554)], []), ([(#"s",#"s",513)], []), ([(#"/",#"/",524),
(#"i",#"i",556)], []), ([(#"l",#"l",495)], []), ([(#"1",#"9",559)], []), ([(#".",#".",524),
(#"0",#"2",559)], []), ([(#".",#".",524)], []), ([(#"p",#"p",611),
(#"u",#"u",612)], []), ([(#"e",#"e",610)], []), ([(#"e",#"e",607)], []), ([(#"a",#"a",599),
(#"u",#"u",600)], []), ([(#"a",#"a",596)], []), ([(#"o",#"o",594)], []), ([(#"c",#"c",592)], []), ([(#"e",#"e",586)], []), ([(#"p",#"p",584),
(#"u",#"u",585)], []), ([(#"e",#"e",583)], []), ([(#"e",#"e",582)], []), ([(#"a",#"a",580),
(#"u",#"u",581)], []), ([(#"a",#"a",579)], []), ([(#"o",#"o",578)], []), ([(#"c",#"c",577)], []), ([(#"e",#"e",576)], []), ([(#"p",#"p",559)], []), ([(#"t",#"t",559)], []), ([(#"v",#"v",559)], []), ([(#"r",#"r",559),
(#"y",#"y",559)], []), ([(#"n",#"n",559)], []), ([(#"l",#"l",559),
(#"n",#"n",559)], []), ([(#"b",#"b",559)], []), ([(#"c",#"c",559)], []), ([(#"r",#"r",559)], []), ([(#"g",#"g",559)], []), ([(#"p",#"p",587)], []), ([(#".",#".",524),
(#"t",#"t",588)], []), ([(#"e",#"e",589)], []), ([(#"m",#"m",590)], []), ([(#"b",#"b",591)], []), ([(#"e",#"e",584)], []), ([(#"t",#"t",593)], []), ([(#".",#".",524),
(#"o",#"o",590)], []), ([(#"v",#"v",595)], []), ([(#".",#".",524),
(#"e",#"e",589)], []), ([(#"r",#"r",597),
(#"y",#"y",559)], []), ([(#".",#".",524),
(#"c",#"c",598)], []), ([(#"h",#"h",559)], []), ([(#"n",#"n",603)], []), ([(#"l",#"l",601),
(#"n",#"n",602)], []), ([(#".",#".",524),
(#"y",#"y",559)], []), ([(#".",#".",524),
(#"e",#"e",559)], []), ([(#".",#".",524),
(#"u",#"u",604)], []), ([(#"a",#"a",605)], []), ([(#"r",#"r",606)], []), ([(#"y",#"y",559)], []), ([(#"b",#"b",608)], []), ([(#".",#".",524),
(#"r",#"r",609)], []), ([(#"u",#"u",604)], []), ([(#"c",#"c",595)], []), ([(#"r",#"r",615)], []), ([(#"g",#"g",613)], []), ([(#".",#".",524),
(#"u",#"u",614)], []), ([(#"s",#"s",577)], []), ([(#".",#".",524),
(#"i",#"i",616)], []), ([(#"l",#"l",559)], []), ([(#"1",#"9",619)], []), ([(#"-",#"-",524),
(#"0",#"2",619)], []), ([(#"-",#"-",524)], []), ([(#"p",#"p",671),
(#"u",#"u",672)], []), ([(#"e",#"e",670)], []), ([(#"e",#"e",667)], []), ([(#"a",#"a",659),
(#"u",#"u",660)], []), ([(#"a",#"a",656)], []), ([(#"o",#"o",654)], []), ([(#"c",#"c",652)], []), ([(#"e",#"e",646)], []), ([(#"p",#"p",644),
(#"u",#"u",645)], []), ([(#"e",#"e",643)], []), ([(#"e",#"e",642)], []), ([(#"a",#"a",640),
(#"u",#"u",641)], []), ([(#"a",#"a",639)], []), ([(#"o",#"o",638)], []), ([(#"c",#"c",637)], []), ([(#"e",#"e",636)], []), ([(#"p",#"p",619)], []), ([(#"t",#"t",619)], []), ([(#"v",#"v",619)], []), ([(#"r",#"r",619),
(#"y",#"y",619)], []), ([(#"n",#"n",619)], []), ([(#"l",#"l",619),
(#"n",#"n",619)], []), ([(#"b",#"b",619)], []), ([(#"c",#"c",619)], []), ([(#"r",#"r",619)], []), ([(#"g",#"g",619)], []), ([(#"p",#"p",647)], []), ([(#"-",#"-",524),
(#"t",#"t",648)], []), ([(#"e",#"e",649)], []), ([(#"m",#"m",650)], []), ([(#"b",#"b",651)], []), ([(#"e",#"e",644)], []), ([(#"t",#"t",653)], []), ([(#"-",#"-",524),
(#"o",#"o",650)], []), ([(#"v",#"v",655)], []), ([(#"-",#"-",524),
(#"e",#"e",649)], []), ([(#"r",#"r",657),
(#"y",#"y",619)], []), ([(#"-",#"-",524),
(#"c",#"c",658)], []), ([(#"h",#"h",619)], []), ([(#"n",#"n",663)], []), ([(#"l",#"l",661),
(#"n",#"n",662)], []), ([(#"-",#"-",524),
(#"y",#"y",619)], []), ([(#"-",#"-",524),
(#"e",#"e",619)], []), ([(#"-",#"-",524),
(#"u",#"u",664)], []), ([(#"a",#"a",665)], []), ([(#"r",#"r",666)], []), ([(#"y",#"y",619)], []), ([(#"b",#"b",668)], []), ([(#"-",#"-",524),
(#"r",#"r",669)], []), ([(#"u",#"u",664)], []), ([(#"c",#"c",655)], []), ([(#"r",#"r",675)], []), ([(#"g",#"g",673)], []), ([(#"-",#"-",524),
(#"u",#"u",674)], []), ([(#"s",#"s",637)], []), ([(#"-",#"-",524),
(#"i",#"i",676)], []), ([(#"l",#"l",619)], []), ([(#"\t",#"\t",109),
(#" ",#" ",109),
(#"-",#"-",257),
(#".",#".",258),
(#"/",#"/",259),
(#"0",#"9",488),
(#":",#":",263)], [6]), ([(#".",#".",261),
(#"0",#"9",488),
(#":",#":",263)], [6]), ([(#"\t",#"\n",679),
(#"\r",#"\r",679),
(#" ",#" ",679)], [5])]

    fun mk yyins = let
        (* current start state *)
        val yyss = ref INITIAL
	fun YYBEGIN ss = (yyss := ss)
	(* current input stream *)
        val yystrm = ref yyins
	(* get one char of input *)
	val yygetc = yyInput.getc
	(* create yytext *)
	fun yymktext(strm) = yyInput.subtract (strm, !yystrm)
        open UserDeclarations
        fun lex 
(yyarg as ()) = let 
     fun continue() = let
            val yylastwasn = yyInput.lastWasNL (!yystrm)
            fun yystuck (yyNO_MATCH) = raise Fail "stuck state"
	      | yystuck (yyMATCH (strm, action, old)) = 
		  action (strm, old)
	    val yypos = yyInput.getpos (!yystrm)
	    val yygetlineNo = yyInput.getlineNo
	    fun yyactsToMatches (strm, [],	  oldMatches) = oldMatches
	      | yyactsToMatches (strm, act::acts, oldMatches) = 
		  yyMATCH (strm, act, yyactsToMatches (strm, acts, oldMatches))
	    fun yygo actTable = 
		(fn (~1, _, oldMatches) => yystuck oldMatches
		  | (curState, strm, oldMatches) => let
		      val (transitions, finals') = Vector.sub (yytable, curState)
		      val finals = map (fn i => Vector.sub (actTable, i)) finals'
		      fun tryfinal() = 
		            yystuck (yyactsToMatches (strm, finals, oldMatches))
		      fun find (c, []) = NONE
			| find (c, (c1, c2, s)::ts) = 
		            if c1 <= c andalso c <= c2 then SOME s
			    else find (c, ts)
		      in case yygetc strm
			  of SOME(c, strm') => 
			       (case find (c, transitions)
				 of NONE => tryfinal()
				  | SOME n => 
				      yygo actTable
					(n, strm', 
					 yyactsToMatches (strm, finals, oldMatches)))
			   | NONE => tryfinal()
		      end)
	    in 
let
fun yyAction0 (strm, lastMatch : yymatch) = let
      val yytext = yymktext(strm)
      in
        yystrm := strm; (SOME (Types.Ptime yytext, getLoc(yypos, yytext) ))
      end
fun yyAction1 (strm, lastMatch : yymatch) = let
      val yytext = yymktext(strm)
      in
        yystrm := strm; (SOME (Types.Pip yytext, getLoc(yypos, yytext) ))
      end
fun yyAction2 (strm, lastMatch : yymatch) = let
      val yytext = yymktext(strm)
      in
        yystrm := strm; (SOME (Types.Pdate yytext, getLoc(yypos, yytext) ))
      end
fun yyAction3 (strm, lastMatch : yymatch) = let
      val yytext = yymktext(strm)
      in
        yystrm := strm;
        (SOME (Types.PbXML (getFirst yytext true), getLoc(yypos, yytext) ))
      end
fun yyAction4 (strm, lastMatch : yymatch) = let
      val yytext = yymktext(strm)
      in
        yystrm := strm;
        (SOME (Types.PeXML (getFirst yytext false), getLoc(yypos, yytext) ))
      end
fun yyAction5 (strm, lastMatch : yymatch) = let
      val yytext = yymktext(strm)
      in
        yystrm := strm; (SOME (Types.Pwhite yytext, getLoc(yypos, yytext) ))
      end
fun yyAction6 (strm, lastMatch : yymatch) = let
      val yytext = yymktext(strm)
      in
        yystrm := strm;
        (SOME (Types.Pint (Option.valOf(LargeInt.fromString yytext), yytext), getLoc(yypos, yytext) ))
      end
fun yyAction7 (strm, lastMatch : yymatch) = let
      val yytext = yymktext(strm)
      in
        yystrm := strm; (SOME (Types.Pstring yytext, getLoc(yypos, yytext) ))
      end
fun yyAction8 (strm, lastMatch : yymatch) = let
      val yytext = yymktext(strm)
      in
        yystrm := strm;
        (SOME (Types.Other (String.sub(yytext,0)),  getLoc(yypos, yytext) ))
      end
fun yyAction9 (strm, lastMatch : yymatch) = (yystrm := strm; (continue()))
val yyactTable = Vector.fromList([yyAction0, yyAction1, yyAction2, yyAction3,
  yyAction4, yyAction5, yyAction6, yyAction7, yyAction8, yyAction9])
in
  if yyInput.eof(!(yystrm))
    then UserDeclarations.eof(yyarg)
    else (case (!(yyss))
       of INITIAL => yygo yyactTable (0, !(yystrm), yyNO_MATCH)
      (* end case *))
end
            end
	  in 
            continue() 	  
	    handle IO.Io{cause, ...} => raise cause
          end
        in 
          lex 
        end
    in
    fun makeLexer yyinputN = mk (yyInput.mkStream yyinputN)
    fun makeLexer' ins = mk (yyInput.mkStream ins)
    end

  end
