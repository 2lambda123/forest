%!PS-Adobe-2.0 EPSF-2.0
%%Title: traintime.eps
%%Creator: gnuplot 4.2 patchlevel 0
%%CreationDate: Fri Jun 29 11:47:06 2007
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (traintime.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 0)
  /Author (Kenny Zhu)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Fri Jun 29 11:47:06 2007)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
630 420 M
63 0 V
6269 0 R
-63 0 V
546 420 M
( 0) Rshow
1.000 UL
LTb
630 915 M
63 0 V
6269 0 R
-63 0 V
546 915 M
( 5) Rshow
1.000 UL
LTb
630 1409 M
63 0 V
6269 0 R
-63 0 V
-6353 0 R
( 10) Rshow
1.000 UL
LTb
630 1904 M
63 0 V
6269 0 R
-63 0 V
-6353 0 R
( 15) Rshow
1.000 UL
LTb
630 2399 M
63 0 V
6269 0 R
-63 0 V
-6353 0 R
( 20) Rshow
1.000 UL
LTb
630 2893 M
63 0 V
6269 0 R
-63 0 V
-6353 0 R
( 25) Rshow
1.000 UL
LTb
630 3388 M
63 0 V
6269 0 R
-63 0 V
-6353 0 R
( 30) Rshow
1.000 UL
LTb
630 3883 M
63 0 V
6269 0 R
-63 0 V
-6353 0 R
( 35) Rshow
1.000 UL
LTb
630 4377 M
63 0 V
6269 0 R
-63 0 V
-6353 0 R
( 40) Rshow
1.000 UL
LTb
630 4872 M
63 0 V
6269 0 R
-63 0 V
-6353 0 R
( 45) Rshow
1.000 UL
LTb
630 420 M
0 63 V
0 4389 R
0 -63 V
630 280 M
( 0) Cshow
1.000 UL
LTb
1422 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
( 10) Cshow
1.000 UL
LTb
2213 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
( 20) Cshow
1.000 UL
LTb
3005 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
( 30) Cshow
1.000 UL
LTb
3796 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
( 40) Cshow
1.000 UL
LTb
4588 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
( 50) Cshow
1.000 UL
LTb
5379 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
( 60) Cshow
1.000 UL
LTb
6171 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
( 70) Cshow
1.000 UL
LTb
6962 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
( 80) Cshow
1.000 UL
LTb
1.000 UL
LTb
630 4872 N
630 420 L
6332 0 V
0 4452 V
-6332 0 V
Z stroke
LCb setrgbcolor
140 2646 M
currentpoint gsave translate 90 rotate 0 0 M
(Avg Time \(secs\)) Cshow
grestore
LTb
LCb setrgbcolor
3796 70 M
(Training size \(%\)) Cshow
LTb
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
LTb
2898 4739 M
(1967Transactions.short) Rshow
LT0
2982 4739 M
399 0 V
1026 425 M
396 6 V
395 7 V
396 5 V
396 17 V
396 6 V
395 9 V
396 15 V
396 3 V
396 17 V
395 25 V
396 4 V
396 19 V
396 10 V
395 22 V
396 18 V
1026 425 Pls
1422 431 Pls
1817 438 Pls
2213 443 Pls
2609 460 Pls
3005 466 Pls
3400 475 Pls
3796 490 Pls
4192 493 Pls
4588 510 Pls
4983 535 Pls
5379 539 Pls
5775 558 Pls
6171 568 Pls
6566 590 Pls
6962 608 Pls
3181 4739 Pls
1.000 UP
1.000 UL
LT1
LTb
2898 4599 M
(MER_T01_01.csv) Rshow
LT1
2982 4599 M
399 0 V
1026 427 M
396 11 V
395 -8 V
396 16 V
396 -8 V
396 18 V
395 10 V
396 32 V
396 -5 V
396 0 V
395 50 V
396 -32 V
396 12 V
396 56 V
395 18 V
396 26 V
1026 427 Crs
1422 438 Crs
1817 430 Crs
2213 446 Crs
2609 438 Crs
3005 456 Crs
3400 466 Crs
3796 498 Crs
4192 493 Crs
4588 493 Crs
4983 543 Crs
5379 511 Crs
5775 523 Crs
6171 579 Crs
6566 597 Crs
6962 623 Crs
3181 4599 Crs
1.000 UP
1.000 UL
LT2
LTb
2898 4459 M
(ai.3000) Rshow
LT2
2982 4459 M
399 0 V
1026 503 M
396 82 V
395 99 V
396 85 V
396 98 V
396 134 V
395 103 V
396 106 V
396 121 V
396 135 V
395 139 V
396 167 V
396 156 V
396 209 V
395 85 V
396 216 V
1026 503 Star
1422 585 Star
1817 684 Star
2213 769 Star
2609 867 Star
3005 1001 Star
3400 1104 Star
3796 1210 Star
4192 1331 Star
4588 1466 Star
4983 1605 Star
5379 1772 Star
5775 1928 Star
6171 2137 Star
6566 2222 Star
6962 2438 Star
3181 4459 Star
1.000 UP
1.000 UL
LT3
LTb
2898 4319 M
(asl.log) Rshow
LT3
2982 4319 M
399 0 V
1026 550 M
396 183 V
395 172 V
396 263 V
396 257 V
396 204 V
395 223 V
396 262 V
396 291 V
396 284 V
395 151 V
396 470 V
396 202 V
396 212 V
395 415 V
396 362 V
1026 550 Box
1422 733 Box
1817 905 Box
2213 1168 Box
2609 1425 Box
3005 1629 Box
3400 1852 Box
3796 2114 Box
4192 2405 Box
4588 2689 Box
4983 2840 Box
5379 3310 Box
5775 3512 Box
6171 3724 Box
6566 4139 Box
6962 4501 Box
3181 4319 Box
1.000 UP
1.000 UL
LT4
LTb
2898 4179 M
(boot.log) Rshow
LT4
2982 4179 M
399 0 V
1026 461 M
396 11 V
395 18 V
396 77 V
396 -43 V
396 -10 V
395 35 V
396 36 V
396 6 V
396 75 V
395 -30 V
396 -87 V
396 63 V
396 27 V
395 1 V
396 -4 V
1026 461 BoxF
1422 472 BoxF
1817 490 BoxF
2213 567 BoxF
2609 524 BoxF
3005 514 BoxF
3400 549 BoxF
3796 585 BoxF
4192 591 BoxF
4588 666 BoxF
4983 636 BoxF
5379 549 BoxF
5775 612 BoxF
6171 639 BoxF
6566 640 BoxF
6962 636 BoxF
3181 4179 BoxF
1.000 UP
1.000 UL
LT5
LTb
2898 4039 M
(crashreporter.log) Rshow
LT5
2982 4039 M
399 0 V
1026 439 M
396 6 V
395 21 V
396 6 V
396 10 V
396 39 V
395 32 V
396 1 V
396 14 V
396 -6 V
395 21 V
396 68 V
396 5 V
396 40 V
395 13 V
396 55 V
1026 439 Circle
1422 445 Circle
1817 466 Circle
2213 472 Circle
2609 482 Circle
3005 521 Circle
3400 553 Circle
3796 554 Circle
4192 568 Circle
4588 562 Circle
4983 583 Circle
5379 651 Circle
5775 656 Circle
6171 696 Circle
6566 709 Circle
6962 764 Circle
3181 4039 Circle
1.000 UP
1.000 UL
LT6
LTb
2898 3899 M
(crashreporter.log.modified) Rshow
LT6
2982 3899 M
399 0 V
1026 430 M
396 26 V
395 5 V
396 25 V
396 13 V
396 7 V
395 35 V
396 17 V
396 18 V
396 17 V
395 38 V
396 -5 V
396 47 V
396 40 V
395 17 V
396 16 V
1026 430 CircleF
1422 456 CircleF
1817 461 CircleF
2213 486 CircleF
2609 499 CircleF
3005 506 CircleF
3400 541 CircleF
3796 558 CircleF
4192 576 CircleF
4588 593 CircleF
4983 631 CircleF
5379 626 CircleF
5775 673 CircleF
6171 713 CircleF
6566 730 CircleF
6962 746 CircleF
3181 3899 CircleF
1.000 UP
1.000 UL
LT7
LTb
2898 3759 M
(dibbler.1000) Rshow
LT7
2982 3759 M
399 0 V
1026 490 M
396 -2 V
395 7 V
396 40 V
396 172 V
3005 587 L
395 57 V
396 -1 V
396 71 V
396 85 V
395 43 V
396 -43 V
396 44 V
396 117 V
395 52 V
396 62 V
1026 490 TriU
1422 488 TriU
1817 495 TriU
2213 535 TriU
2609 707 TriU
3005 587 TriU
3400 644 TriU
3796 643 TriU
4192 714 TriU
4588 799 TriU
4983 842 TriU
5379 799 TriU
5775 843 TriU
6171 960 TriU
6566 1012 TriU
6962 1074 TriU
3181 3759 TriU
1.000 UP
1.000 UL
LT8
LTb
2898 3619 M
(ls-l.txt) Rshow
LT8
2982 3619 M
399 0 V
1026 421 M
396 3 V
395 -1 V
396 1 V
396 -1 V
396 2 V
395 0 V
396 -1 V
396 1 V
396 2 V
395 -1 V
396 1 V
396 0 V
396 1 V
395 -1 V
396 1 V
1026 421 TriUF
1422 424 TriUF
1817 423 TriUF
2213 424 TriUF
2609 423 TriUF
3005 425 TriUF
3400 425 TriUF
3796 424 TriUF
4192 425 TriUF
4588 427 TriUF
4983 426 TriUF
5379 427 TriUF
5775 427 TriUF
6171 428 TriUF
6566 427 TriUF
6962 428 TriUF
3181 3619 TriUF
1.000 UP
1.000 UL
LT0
LTb
2898 3479 M
(netstat-an) Rshow
LT0
2982 3479 M
399 0 V
1026 428 M
396 3 V
395 1 V
396 5 V
396 2 V
396 3 V
395 11 V
396 -5 V
396 2 V
396 8 V
395 8 V
396 2 V
396 4 V
396 4 V
395 3 V
396 3 V
1026 428 TriD
1422 431 TriD
1817 432 TriD
2213 437 TriD
2609 439 TriD
3005 442 TriD
3400 453 TriD
3796 448 TriD
4192 450 TriD
4588 458 TriD
4983 466 TriD
5379 468 TriD
5775 472 TriD
6171 476 TriD
6566 479 TriD
6962 482 TriD
3181 3479 TriD
1.000 UP
1.000 UL
LT1
LTb
2898 3339 M
(page_log) Rshow
LT1
2982 3339 M
399 0 V
1026 424 M
396 2 V
395 2 V
396 3 V
396 2 V
396 3 V
395 4 V
396 4 V
396 4 V
396 5 V
395 2 V
396 4 V
396 5 V
396 2 V
395 4 V
396 4 V
1026 424 TriDF
1422 426 TriDF
1817 428 TriDF
2213 431 TriDF
2609 433 TriDF
3005 436 TriDF
3400 440 TriDF
3796 444 TriDF
4192 448 TriDF
4588 453 TriDF
4983 455 TriDF
5379 459 TriDF
5775 464 TriDF
6171 466 TriDF
6566 470 TriDF
6962 474 TriDF
3181 3339 TriDF
1.000 UP
1.000 UL
LT2
LTb
2898 3199 M
(quarterlypersonalincome) Rshow
LT2
2982 3199 M
399 0 V
1026 434 M
396 2 V
395 21 V
396 -25 V
396 3 V
396 90 V
395 -24 V
396 -7 V
396 144 V
396 -74 V
395 28 V
396 133 V
396 -95 V
396 75 V
395 -53 V
396 145 V
1026 434 Dia
1422 436 Dia
1817 457 Dia
2213 432 Dia
2609 435 Dia
3005 525 Dia
3400 501 Dia
3796 494 Dia
4192 638 Dia
4588 564 Dia
4983 592 Dia
5379 725 Dia
5775 630 Dia
6171 705 Dia
6566 652 Dia
6962 797 Dia
3181 3199 Dia
1.000 UP
1.000 UL
LT3
LTb
2898 3059 M
(railroad.txt) Rshow
LT3
2982 3059 M
399 0 V
1026 466 M
396 -22 V
395 4 V
396 30 V
396 -33 V
396 35 V
395 15 V
396 -33 V
396 42 V
396 2 V
395 28 V
396 10 V
396 42 V
396 -9 V
395 -10 V
396 -12 V
1026 466 DiaF
1422 444 DiaF
1817 448 DiaF
2213 478 DiaF
2609 445 DiaF
3005 480 DiaF
3400 495 DiaF
3796 462 DiaF
4192 504 DiaF
4588 506 DiaF
4983 534 DiaF
5379 544 DiaF
5775 586 DiaF
6171 577 DiaF
6566 567 DiaF
6962 555 DiaF
3181 3059 DiaF
1.000 UP
1.000 UL
LT4
LTb
2898 2919 M
(scrollkeeper.log) Rshow
LT4
2982 2919 M
399 0 V
1026 428 M
396 21 V
395 -2 V
396 20 V
396 27 V
396 17 V
395 1 V
396 15 V
396 19 V
396 43 V
395 -16 V
396 40 V
396 18 V
396 28 V
395 9 V
396 31 V
1026 428 Pent
1422 449 Pent
1817 447 Pent
2213 467 Pent
2609 494 Pent
3005 511 Pent
3400 512 Pent
3796 527 Pent
4192 546 Pent
4588 589 Pent
4983 573 Pent
5379 613 Pent
5775 631 Pent
6171 659 Pent
6566 668 Pent
6962 699 Pent
3181 2919 Pent
1.000 UP
1.000 UL
LT5
LTb
2898 2779 M
(windowserver_last.log) Rshow
LT5
2982 2779 M
399 0 V
1026 467 M
396 3 V
395 50 V
396 20 V
396 10 V
396 129 V
395 9 V
396 93 V
396 1 V
396 79 V
395 77 V
396 -6 V
396 114 V
396 51 V
395 57 V
396 49 V
1026 467 PentF
1422 470 PentF
1817 520 PentF
2213 540 PentF
2609 550 PentF
3005 679 PentF
3400 688 PentF
3796 781 PentF
4192 782 PentF
4588 861 PentF
4983 938 PentF
5379 932 PentF
5775 1046 PentF
6171 1097 PentF
6566 1154 PentF
6962 1203 PentF
3181 2779 PentF
1.000 UP
1.000 UL
LT6
LTb
2898 2639 M
(yum.txt) Rshow
LT6
2982 2639 M
399 0 V
1026 431 M
396 14 V
395 11 V
396 8 V
396 18 V
396 12 V
395 14 V
396 8 V
396 -4 V
396 17 V
395 14 V
396 9 V
396 7 V
396 -2 V
395 30 V
396 -4 V
1026 431 C0
1422 445 C0
1817 456 C0
2213 464 C0
2609 482 C0
3005 494 C0
3400 508 C0
3796 516 C0
4192 512 C0
4588 529 C0
4983 543 C0
5379 552 C0
5775 559 C0
6171 557 C0
6566 587 C0
6962 583 C0
3181 2639 C0
1.000 UL
LTb
630 4872 N
630 420 L
6332 0 V
0 4452 V
-6332 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
