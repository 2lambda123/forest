need to add recursion
  contractiveness: must go through directory structure
                   with * or ? modality

need to add predicates on left of : to indicate pre-matching
constraints.
********
formal      ::= h_id '::' h_ty
formal_list ::= formal | formal ',' formal_list
formals     ::= '(' formal_list ')'

meta_id     ::= permission | owner | group | size | timestamp | ...
constraints ::= h_exp  -- with meta_id's in scope

path_elem   ::= h_exp | h_id '::' h_exp     -- note that this won't work because : can be inside an h_exp
	        	      	            -- expectation that h_exp evaluates to either a string or a list of strings
path        ::= path_elem | path_elem '/' path   -- each h_id is bound to the right

const_file_ty ::= p_txt | ...
pads_ty       ::= p_base_ty 
                | '(' pads_ty, ',' ...',' pads_ty ')' 
                | p_record_ty 
                | p_list_ty
                | p_set_ty
                | pads_ty option
                | pads_ty <| h_exp |>
                | p_id | pads_ty h_exp  | ...
           


dty_decl      ::= d_id [formals] ['<|' h_exp '|>' ] '=' dty
dty           ::=  const_file_ty 
                 | pads_file_ty 
                 | pdirectory '{' dir_item_list '}' 
                 | d_id h_exp 
                 | dty doption                   -- dir item that optionally exist
                 | dty dlist                     -- list of dir items
                 | dty '<|' constraints '|>'     -- constrained dir item
                 | dty @ path                    -- link to dir item 

dir_field      ::= h_id 'is' h_exp '::' dty  ';'
                |  h_id :: h_ty = h_exp ';'            -- computed expression
dir_list_field ::= h_id 'is' '[' h_exp '::' dty '|' h_pat '<-' h_exp [, h_exp] ']' ';'
dir_item       ::= dir_field | dir_list_field
dir_item_list  ::= dir_item | dir_item ';' dir_item_list


