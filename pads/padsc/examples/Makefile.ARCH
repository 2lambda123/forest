:PACKAGE: ast

.SOURCE : ../../include ../tests ../gen ../p

if 0
CCFLAGS = $(CC.OPTIMIZE) -DNDEBUG
end
CCFLAGS = $(CC.DEBUG)

PADSC = ../../padsc
RES_SPEC = -r ../gen

PADS_TESTS = format1 format2 format3 format4 format5 format6 punion-manifest \
             readinttest ai
FORMAT_TESTS = test_format1 test_format2 test_format3 test_format5 test_format6
DIB_TESTS =  test_dibbler1 test_dibbler1_mod test_fast_dib test_fast_dib_mod
OTHER_TESTS  = test_enum test_from test_ai test_readint
ALL_TESTS = $(FORMAT_TESTS) $(DIB_TESTS) $(OTHER_TESTS) 

dib_tests : $(DIB_TESTS)

format_tests : $(FORMAT_TESTS)

other_tests : $(OTHER_TESTS)

all_tests : $(ALL_TESTS)

test_format1  :: test_format1.c   format1.c     -lpadsc
test_format2  :: test_format2.c   format2.c     -lpadsc
test_format3  :: test_format3.c   format3.c     -lpadsc
test_format4  :: test_format4.c   format4.c     -lpadsc
test_format5  :: test_format5.c   format5.c     -lpadsc
test_format6  :: test_format6.c   format6.c     -lpadsc

accum_struct  :: testtwo.c        struct.c      -lpadsc
accum_ai      :: http_clf_t.c     ai.c          -lpadsc

manifest_union :: munion.c        punion-manifest.c -lpadsc
test_struct   :: test_struct.c    struct.c      -lpadsc
test_struct2  :: test_struct2.c   struct2.c     -lpadsc
test_union2   :: test_punion2.c   punion2.c     -lpadsc
test_array    :: test_array.c     array.c       -lpadsc
test_typedef  :: test_typedef.c   typedef.c     -lpadsc
test_record_enum :: test_record_enum.c record_enum.c -lpadsc
test_enum     :: test_enum.c      enum.c        -lpadsc
test_from     :: test_from.c      from.c        -lpadsc
test_ai       :: test_ai.c        ai.c          -lpadsc
test_readint  :: test_readint.c   readinttest.c -lpadsc
test_dibbler1 :: test_dibbler1.c  dibbler.c     -lpadsc
test_dibbler1_mod :: test_dibbler1_mod.c  dibbler-mod.c     -lpadsc
test_fast_dib :: test_fast_dib.c  dibbler2.c    -lpadsc
test_fast_dib_mod :: test_fast_dib_mod.c  dibbler2-mod.c    -lpadsc


genp    : format1 format2 format3 format4 format5 format6 punion-manifest ai readinttest
format1 : format1.p
	  $(PADSC) ../p/format1.p $(RES_SPEC)

format2 : format2.p
	  $(PADSC) ../p/format2.p $(RES_SPEC)

format3 : format3.p
	  $(PADSC) ../p/format3.p $(RES_SPEC)

format4 : format4.p
	  $(PADSC) ../p/format4.p $(RES_SPEC)

format5 : format5.p
	  $(PADSC) ../p/format5.p $(RES_SPEC)

format6 : format6.p
	  $(PADSC) ../p/format6.p $(RES_SPEC)

punion-manifest : punion-manifest.p
	  $(PADSC) ../p/punion-manifest.p $(RES_SPEC)

readinttest : readinttest.p
	  $(PADSC) ../p/readinttest.p $(RES_SPEC)

ai : ai.p
	  $(PADSC) ../p/ai.p $(RES_SPEC)

regress : genp\
	  regress_test_format1 \
          regress_test_format2 \
          regress_test_format3 \
          regress_test_format5 \
          regress_test_format6 \
          regress_test_readint \
          regress_test_munion  \
          regress_test_ai

regress_test_format1 : test_format1
	if [ -f tmp/tmp.test_format1 ]; then $(RM) tmp/tmp.test_format1; fi
	(./test_format1 2>&1) | ../../scripts/remove_junk.pl | cat > tmp/tmp.test_format1
	diff tmp/tmp.test_format1 ../regress/test_format1.regress || echo TEST_FORMAT1 DIFFERS

regress_test_format2 : test_format2
	if [ -f tmp/tmp.test_format2 ]; then $(RM) tmp/tmp.test_format2; fi
	(./test_format2 2>&1) | ../../scripts/remove_junk.pl | cat > tmp/tmp.test_format2
	diff tmp/tmp.test_format2 ../regress/test_format2.regress || echo TEST_FORMAT2 DIFFERS

regress_test_format3 : test_format3
	if [ -f tmp/tmp.test_format3 ]; then $(RM) tmp/tmp.test_format3; fi
	(./test_format3 2>&1) | ../../scripts/remove_junk.pl | cat > tmp/tmp.test_format3
	diff tmp/tmp.test_format3 ../regress/test_format3.regress || echo TEST_FORMAT3 DIFFERS

regress_test_format4 : test_format4
	if [ -f tmp/tmp.test_format4 ]; then $(RM) tmp/tmp.test_format4; fi
	(./test_format4 2>&1) | ../../scripts/remove_junk.pl | cat > tmp/tmp.test_format4
	diff tmp/tmp.test_format4 ../regress/test_format4.regress || echo TEST_FORMAT4 DIFFERS

regress_test_format5 : test_format5
	if [ -f tmp/tmp.test_format5 ]; then $(RM) tmp/tmp.test_format5; fi
	(./test_format5 2>&1) | ../../scripts/remove_junk.pl | cat > tmp/tmp.test_format5
	diff tmp/tmp.test_format5 ../regress/test_format5.regress || echo TEST_FORMAT5 DIFFERS

regress_test_format6 : test_format6
	if [ -f tmp/tmp.test_format6 ]; then $(RM) tmp/tmp.test_format6; fi
	(./test_format6 2>&1) | ../../scripts/remove_junk.pl | cat > tmp/tmp.test_format6
	diff tmp/tmp.test_format6 ../regress/test_format6.regress || echo TEST_FORMAT6 DIFFERS

regress_test_readint : test_readint
	if [ -f tmp/tmp.test_readint ]; then $(RM) tmp/tmp.test_readint; fi
	(./test_readint 2>&1) | ../../scripts/remove_junk.pl | grep error: | cat > tmp/tmp.test_readint
	diff tmp/tmp.test_readint ../regress/test_readint.regress || echo TEST_READINT DIFFERS

regress_test_munion : manifest_union
	if [ -f tmp/tmp.manifest_union ]; then $(RM) tmp/tmp.manifest_union; fi
	(./manifest_union <../data/union-manifest 2>&1) | ../../scripts/remove_junk.pl | cat > tmp/tmp.manifest_union
	diff tmp/tmp.manifest_union ../regress/munion.regress || echo TEST_MUNION DIFFERS

regress_test_ai : test_ai
	if [ -f tmp/tmp.test_ai ]; then $(RM) tmp/tmp.test_ai; fi
	(./test_ai 2>&1) | ../../scripts/remove_junk.pl | grep error: | cat > tmp/tmp.test_ai
	diff tmp/tmp.test_ai ../regress/test_ai.regress || echo TEST_AI DIFFERS

clean :
	$(RM) -f *~ *.o $(ALL_TESTS)

