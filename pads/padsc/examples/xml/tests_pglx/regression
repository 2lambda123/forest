#!/usr/bin/perl
# 
# PADS/PADX regression test
# assumes user has run the PADS SETENV script
#

# Test for PADS_HOME
$phome = $ENV{'PADS_HOME'};
if ($phome eq "") {
   die "regression: please set PADS_HOME environment variable";
}

# Test for Web source code dir
$pcode = $ENV{'PADS_WEB_CODE_ROOT'};
if ($pcode eq "") {
   die "regression: please set PADS_WEB_CODE_ROOT environment variable";
}
print "regression: using $pcode as Web code root directory\n";

# Check that it exists
if (! -d $pcode) {
   die "regression: PADS_WEB_CODE_ROOT directory does not exist";
}

&regress_run("date", "Date");
&regress_run("ip", "IP");
&regress_run("string", "String");
&regress_run("int32", "Int32");
&regress_run("syslog", "Syslog");
&regress_run("simple", "Simple");
&regress_run("wsl", "WSL");
&regress_run("sirius", "Sirius");
&regress_run("hostname", "Hostname");

sub regress_run {

   my ($a, $b) = @_;

   # copy in needed PADS input file and C program; and do not assume that
   # user has set environment variables. Hoping this will be fully
   # portable.
   print "regression: generating PADS XML from source $b\n";
   $cmd = "cp $pcode/html/sources/$a/out/rwxml_$a.c .";
   $rslt = `$cmd 2>&1`;
   $cmd = "cp $pcode/html/sources/$a/p/$a.p .";
   $rslt = `$cmd 2>&1`;
   $cmd = "/usr/bin/gmake rwxml_$a";
   $rslt = `$cmd 2>&1`;

   # Generate XML output from PADS executable
   $cmd = "cat $pcode/html/sources/$a/data/sample | linux.i386/rwxml_$a > linux.i386/pads.$a.xml";
   $rslt = `$cmd 2>&1`;

   # copy needed C program and header file
   print "regression: generating PADX XML from source $b\n";
   $cmd = "cp $pcode/html/sources/$a/out/test_bulk_$a.c .";
   $rslt = `$cmd 2>&1`;
   $cmd = "cp $pcode/html/sources/$a/out/test_$a.h .";
   $rslt = `$cmd 2>&1`;
   $cmd = "padsc -x $a.p; mv GNUmakefile Yu; cp GNUmakefile.galax GNUmakefile; /usr/bin/gmake test_bulk_$a; mv Yu GNUmakefile";
   $rslt = `$cmd 2>&1`;

   $cmd = "linux.i386/test_bulk_$a $pcode/html/sources/$a/data/sample $pcode/html/sources/$a/queries/dot.xq";
   $rslt = `$cmd 2>&1`;

   # now clean up afterwards
   $cmd = "rm $a.*";
   $rslt = `$cmd 2>&1`;
   $cmd = "rm *.[ch]";
   $rslt = `$cmd 2>&1`;
   $cmd = "rm linux.i386/rwxml_$a";
   $rslt = `$cmd 2>&1`;
   $cmd = "rm linux.i386/test_bulk_$a";
   $rslt = `$cmd 2>&1`;
}
