#!/bin/tcsh

# file paths will be filled in by install script

# padsc : front-end script to PADS compiler
# 
# features of this front-end script:
#         1. If all the .p files are in the same dir P 
#            and there is a 'gen' dir at the same level
#            as P, the generated files are placed in gen.
#            This auto retargeting does not occur if
#            there is no gen, or an explicit -p option
#            is already present, or if some .p files
#            are in different locations.
#
#         2. The script needs to determine $PADS_HOME, the location
#            of the PADS installation, so that it can find
#            $PADS_HOME/padsc/include and $PADS_HOME/padsc/lib.
#            If environment variable PADS_HOME is not set,
#            the script fails and reports an error.
#

set _pads_status = OK

if (! $?PADS_HOME) then
  set _pads_status = FAILED
else
  if ("$PADS_HOME"x == x) then
    set _pads_status = FAILED
  endif
endif

if ($_pads_status == "FAILED") then
  echo "\n##############################################################################"
  echo "# Set env var PADS_HOME and then use padsc again."
  echo "##############################################################################\n"
  exit 0
endif

if (!(-d $PADS_HOME && -d $PADS_HOME/padsc && -d $PADS_HOME/lib && -d $PADS_HOME/padsc/include)) then
  echo "\n##############################################################################"
  echo "# Directory $PADS_HOME does not appear to be a valid PADS installation dir."
  echo "# Set env var PADS_HOME to correct location and then use padsc again."
  echo "##############################################################################\n"
  exit 0
endif

set _ast_arch = `$PADS_HOME/ast-ast/bin/package.cvs`
set _arch_n_opsys = `$PADS_HOME/scripts/arch-n-opsys`

set IMAGE = $PADS_HOME/lib/padsc
set SMLBIN = $PADS_HOME/binlinks/smlruntime.$_arch_n_opsys

if ($_ast_arch == linux.i386) then 
    set lua = -U__GNUC__
    set lda = -D__LINUX_PREPROCESSOR_FIXES
else 
    if ($_ast_arch == freebsd.i386) then 
        set lua = -U__GNUC__
        set lda = -D__LINUX_PREPROCESSOR_FIXES
    else
       if ($_ast_arch == sol8.sun4) then 
        set lua = -U__GNUC__
        set lda = -D__LINUX_PREPROCESSOR_FIXES
        else
            set lua =
            set lda = 
        endif
    endif
endif

set opts = ""
set pfiles = ""
set retarg = ""
set retarg_OK = 1
set help = 0
set optx = 0

foreach x ($*)
    switch ($x)
    case -r:
      set retarg_OK = 0
      breaksw
    case -h:
    case --help:
      set help = 1
      breaksw
    case -x:
      set opts = "$opts $x"
      set optx = 1
      breaksw
    case -*:
      set opts = "$opts $x"
      breaksw
    default:
      set tltmp = $x:t
      set y = `basename $tltmp .p`
      if ($tltmp == $y) then
        set opts = "$opts $x"
      else
        set pfiles = "$pfiles $x"
        set zh = $x:h
        set zt = $x:t
        if ($zh == $zt) then
          set pdir = "."
          set tdir = "../gen"
        else
          set pdir = $zh
          set zhh = $zh:h
          set zht = $zh:t
          if ($zhh == $zht) then
            set tdir = "./gen"
          else
            set tdir = $zhh/gen
          endif
	  if (!(-d $tdir)) then
	    set tdir = $pdir/../gen
	  endif
        endif
        if (-d $pdir && -d $tdir) then
          if ($retarg == "") then
            set retarg = $tdir
            #echo "initial retarg $retarg"
          else
            #echo "checking another tdir against retarg"
            if ($tdir != $retarg) then
              #echo "tdir $tdir != retarg $retarg"
              set retarg_OK = 0
            endif
          endif
        else
          #echo "pdir $pdir or tdir $tdir are not dirs"
          set retarg_OK = 0
        endif
      endif
      breaksw
    endsw
end # forech

#echo "full_args = $*"
#echo "pfiles    = $pfiles"
#echo "opts      = $opts"
#echo "retarg_OK = $retarg_OK"
#echo "retarg    = $retarg"

if ($help) then
  set cmd = "-help"
else
  if ("$pfiles" == "") then
    echo "\nNo .p files specified.  Usage:  $0 <options> <.p files>\n\tUse --help for all available options.\n"
    exit -1
  endif
  if ($retarg_OK) then
      set cmd = "-r $retarg $opts $pfiles"
      echo "\nChose target dir $retarg\n"
  else
      set cmd = "$*"
  endif
endif

set _ocaml_status = OK
set _galaxlib_status = OK
set _padsglxlib_status = OK

if (! $?OCAML_LIB_DIR) then
  set _ocaml_status = FAILED
else
  if ("$OCAML_LIB_DIR"x == x) then
    set _ocaml_status = FAILED
  endif
endif

if ($_ocaml_status == "FAILED") then
  set ocaml_lib_dir = /usr/common/lib/ocaml
else
  set ocaml_lib_dir = $OCAML_LIB_DIR
endif

if (-d $ocaml_lib_dir) then
  set add_incs = "-I $ocaml_lib_dir"
else
  set add_incs = ""
endif

if ($optx) then
  if (! $?GALAX_HOME) then
    set _galaxlib_status = FAILED
  else
    if ("$GALAX_HOME"x == x) then
      set _galaxlib_status = FAILED
    endif
  endif

  if ($_galaxlib_status == "FAILED") then
    echo "Env variable GALAX_HOME must be set to use -x option"
    exit(-1)
  endif
  set galax_lib_dir = $GALAX_HOME/lib/c
  if (-d $galax_lib_dir) then
    set add_incs = "$add_incs -I $galax_lib_dir"
  else
    echo "Warning: expected directory $galax_lib_dir not found, check your GALAX_HOME env variable settting"
    exit(-1)
  endif

  if (! $?PADSGLX_HOME) then
    set _padsglxlib_status = FAILED
  else
    if ("$PADSGLX_HOME"x == x) then
      set _padsglxlib_status = FAILED
    endif
  endif

  if ($_padsglxlib_status == "FAILED") then
    echo "Env variable PADSGLX_HOME must be set to use -x option"
    exit(-1)
  endif
  set padsglx_lib_dir = $PADSGLX_HOME

  if (-d $padsglx_lib_dir) then
    set add_incs = "$add_incs -I $padsglx_lib_dir"
  else
    echo "Warning: expected directory $padsglx_lib_dir not found, check your PADSGLX_HOME env variable settting"
    exit(-1)
  endif
endif

exec $SMLBIN @SMLload=$IMAGE $PADS_HOME $cmd -I $PADS_HOME/padsc/include -I $PADS_HOME/ast-ast/arch/$_ast_arch/include/ast $add_incs \
$lua $lda < /dev/null

