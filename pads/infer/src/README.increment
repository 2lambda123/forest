Incremental Learning System
===========================

To Build:

make clean
make increment


To use:

increment -f DATA_FILE(S) [-i INIT_SIZE (500)] [-l INC_SIZE (100)]
[-d INIT_DESC_XML] [-opt OPT_LEVEL (3)] [-tmout SECS (900)] [-w ADC_WEIGHT (10)]
[-output OUTPUT_DIR] [-reparse BOOL] [-u FLOAT] [-sa BOOL]

Parameters within the brackets are optional.

-f DATA_FILES : specifies a list of files to be learned from

-i INIT_SIZE : specifies the size of the initial learning chunk (taken from the top
		of the first file in the above list). Default is 500.

-l INC_SIZE : specifies the size of the incremental learning chunk. Default is 100.
		Note the incremental chunk size means the number of error chunks
		the system sees before updating the description to accomodate these errors.

-d INIT_DESC_XML : passes in a PADS description in its pxml form as 
		the initial description.

-opt OPT_LEVEL : specifies the level of optimization [1-3]. 3 is default. 
		 1 means no optimization
		 2 means do cleaning of the intermediate sets of parses
		 3 means do the cleaning, parse cut-off and memoing

-tmout SECS : specifies the number of seconds before the incremental learning system
	     	times out. Default is 900 secs.

-w ADC_WEIGHT : specifies the weight for atomic data complexity when computing the
		the MDL score. Default is 10.

-output OUTPUT_DIR : specifies the output directories for writing the learned .p file.

-reparse BOOL : specifies whether to do a reparse of the entire learned data after
		a description is learned. Default is false.

-u FLOAT: sets a parameters for doing union clustering [0-1]. The number gives the
		"strength" of union clustering. Default is 1. 
		0 means cluster only those histograms that are exactly the 
		same in a union branch.	
		1 means no union clustering.

-sa BOOL: specifies whether to do simulated annealing instead of greedy local descent
		when searching for a better description to rewrite to. Default is false.
